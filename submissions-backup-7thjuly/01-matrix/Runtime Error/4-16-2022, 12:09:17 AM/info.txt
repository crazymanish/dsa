{"id":681112629,"lang":"swift","time":"2 months, 3 weeks","timestamp":1650060557,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/681112629/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution {    \n    func updateMatrix(_ mat: [[Int]]) -> [[Int]] {\n        let rowsCount = mat.count\n        let columnsCount = mat[0].count\n        let maxValue = rowsCount*columnsCount\n        var outputMatrix = Array(repeating: Array(repeating: maxValue, count: columnsCount), count: rowsCount)\n        \n        for row in 0..<rowsCount {\n            for column in 0..<columnsCount {\n                if mat[row][column] == 0 {\n                    outputMatrix[row][column] = 0 \n                    continue\n                }\n                \n                // Top + left\n                if row > 0 { outputMatrix[row][column] = outputMatrix[row-1][column] + 1 } \n                if column > 0 { outputMatrix[row][column] = min(outputMatrix[row][column], outputMatrix[row][column-1] + 1) } \n            }\n        }\n        \n        for row in (0..<rowsCount).reversed() {\n            for column in (0..<columnsCount).reversed() {\n                if mat[row][column] == 0 { continue }\n                \n                // Down + Right\n                if row < columnsCount - 1 { outputMatrix[row][column] = min(outputMatrix[row][column], outputMatrix[row+1][column] + 1) }\n                if column < rowsCount - 1 { outputMatrix[row][column] = min(outputMatrix[row][column], outputMatrix[row][column+1] + 1) }\n            }\n        }\n        \n        return outputMatrix\n    }\n}","compare_result":"11110000000000000000000000000000000000000000000000","title_slug":"01-matrix"}