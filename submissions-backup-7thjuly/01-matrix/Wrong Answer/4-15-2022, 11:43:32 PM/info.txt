{"id":681103691,"lang":"swift","time":"2 months, 3 weeks","timestamp":1650059012,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/681103691/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution {\n    func updateMatrix(_ mat: [[Int]]) -> [[Int]] {\n        var mutableMatrix = mat\n        let rowsCount = mutableMatrix.count\n        let columnsCount = mutableMatrix[0].count\n        \n        let lastRow = rowsCount-1\n        let lastColumn = columnsCount-1\n        \n        for row in (0...lastRow) {\n            for column in (0...lastColumn) {\n                if mutableMatrix[row][column] == 1 {\n                    let leftValue = column == 0 ? 0 : mutableMatrix[row][column-1]\n                    let upValue = row == 0 ? 0 : mutableMatrix[row-1][column]\n                    \n                    let minimumValue = min(leftValue, upValue)\n                    mutableMatrix[row][column] = 1 + minimumValue\n                }\n            }\n        }\n        \n        for row in (0...lastRow).reversed() {\n            for column in (0...lastColumn).reversed() {\n                if mutableMatrix[row][column] == 1 {\n                    let rightValue = column == lastColumn ? 0 : mutableMatrix[row][column+1]\n                    let downValue = row == lastRow ? 0 : mutableMatrix[row+1][column]\n                    \n                    let minimumValue = min(rightValue, downValue)\n                    mutableMatrix[row][column] = min(mutableMatrix[row][column], 1 + minimumValue)\n                }\n            }\n        }\n        \n        return mutableMatrix\n    }\n}","compare_result":"11111110000000000000000000000000000000000111100000","title_slug":"01-matrix"}