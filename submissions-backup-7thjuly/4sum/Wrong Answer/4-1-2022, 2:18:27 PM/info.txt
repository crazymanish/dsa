{"id":671595652,"lang":"swift","time":"3 months, 1 week","timestamp":1648815507,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/671595652/","is_pending":"Not Pending","title":"4Sum","memory":"N/A","code":"class Solution {\n    func fourSum(_ nums: [Int], _ target: Int) -> [[Int]] {\n        var output: [[Int]] = []\n        let array = nums.sorted()\n        let arrayCount = array.count\n\n        guard arrayCount > 3 else { return output }\n\n        for firstNumIndex in 0..<arrayCount - 3 {\n            if firstNumIndex > 0, array[firstNumIndex] == array[firstNumIndex-1] { continue } // skip Duplicate\n            \n            for secondNumIndex in firstNumIndex+1..<arrayCount - 2 {\n                if secondNumIndex-1 > firstNumIndex, array[secondNumIndex] == array[secondNumIndex-1] { continue } // skip Duplicate\n                \n                var leftPointer = secondNumIndex + 1\n                var rightPointer = arrayCount - 1\n\n                while leftPointer < rightPointer {\n                    let firstNum = array[firstNumIndex]\n                    let secondNum = array[secondNumIndex]\n                    let thirdNum = array[leftPointer]\n                    let forthNum = array[rightPointer]\n                \n                    let currentTarget = firstNum + secondNum + thirdNum + forthNum\n                    if (currentTarget == target) {\n                        if leftPointer-1 > secondNumIndex, array[leftPointer] == array[leftPointer-1] { // skip Duplicate\n                            leftPointer += 1\n                            continue\n                        }\n                        output.append([firstNum, secondNum, thirdNum, forthNum])\n                        leftPointer += 1\n                    } else if (currentTarget < 0) {\n                        leftPointer += 1\n                    } else {\n                        rightPointer -= 1\n                    }\n                }\n            }\n        }\n\n        return output\n    }\n}","compare_result":"1111111111111011110111101111011011111010111111101111110111111110001110110111111111100111011111101000011011110011101010001000010110100010010000000000100000100001000001000000010000101001000101100010000001010001000001001010101111001111111111010101111111111111111110101011111111111111110111101","title_slug":"4sum"}