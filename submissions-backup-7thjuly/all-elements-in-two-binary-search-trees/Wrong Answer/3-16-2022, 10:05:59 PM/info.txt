{"id":661410877,"lang":"swift","time":"3 months, 3 weeks","timestamp":1647464759,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/661410877/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func getAllElements(_ root1: TreeNode?, _ root2: TreeNode?) -> [Int] {\n        if root1 == nil && root2 == nil { return [] }\n        \n        if root1 == nil { return [root2!.val] }\n        if root2 == nil { return [root1!.val] }\n        \n\n        let leftElements = getAllElements(root1?.left, root2?.left)\n        let rightElements = getAllElements(root1?.right, root2?.right)\n        \n        if root1!.val <= root2!.val {\n            return leftElements + [root1!.val, root2!.val] + rightElements   \n        } else {\n            return leftElements + [root2!.val, root1!.val]  + rightElements\n        }\n    }\n}","compare_result":"110000000000000000000000000000000000000000000000","title_slug":"all-elements-in-two-binary-search-trees"}