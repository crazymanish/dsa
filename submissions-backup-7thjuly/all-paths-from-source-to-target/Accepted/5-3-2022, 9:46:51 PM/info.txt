{"id":692531483,"lang":"swift","time":"2Â months","timestamp":1651607211,"status_display":"Accepted","runtime":"81 ms","url":"/submissions/detail/692531483/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"16 MB","code":"class Solution {\n    func allPathsSourceTarget(_ graph: [[Int]]) -> [[Int]] {\n        let sourceNode = 0\n        let destinationNode = graph.count-1\n        \n        var allPaths: [[Int]] = []\n        var currentPath: [Int] = []\n        \n        func findAllPathsUsingDFS(_ currentNode: Int) {\n            currentPath += [currentNode]\n            \n            if currentNode == destinationNode {\n                allPaths.append(currentPath)\n            }\n            \n            for nextNode in graph[currentNode] {\n                findAllPathsUsingDFS(nextNode)\n                \n                // backtracking, removing the last item for next recursion call\n                currentPath.removeLast() \n            }\n        }\n        \n        findAllPathsUsingDFS(sourceNode)\n        return allPaths\n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target"}