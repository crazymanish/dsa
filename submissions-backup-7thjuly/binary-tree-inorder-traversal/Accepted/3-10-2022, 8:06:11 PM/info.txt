{"id":657383563,"lang":"swift","time":"3 months, 4 weeks","timestamp":1646939171,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/657383563/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"14.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    var inorderTraversalNodeValues: [Int] = []\n    \n    func inorderTraversal(_ root: TreeNode?) -> [Int] {\n        performInorderTraversal(root)\n        \n        return inorderTraversalNodeValues\n    }\n    \n    private func performInorderTraversal(_ root: TreeNode?) {\n        if root == nil { return }\n        \n        performInorderTraversal(root?.left)\n        inorderTraversalNodeValues.append(root!.val)\n        performInorderTraversal(root?.right)\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}