{"id":702014354,"lang":"swift","time":"1 month, 2 weeks","timestamp":1652868215,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/702014354/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"14.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\n\nclass Solution {\n    func inorderTraversal(_ root: TreeNode?) -> [Int] {\n        if root == nil { return [] }\n        \n        let leftInorderTraversal = inorderTraversal(root?.left)\n        let rightInorderTraversal = inorderTraversal(root?.right)\n        \n        return leftInorderTraversal + [root!.val] + rightInorderTraversal\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}