{"id":662688881,"lang":"swift","time":"3 months, 2 weeks","timestamp":1647647580,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/662688881/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    private var maxPathSum: Int = Int.min\n\n    func maxPathSum(_ root: TreeNode?) -> Int {\n        guard let root = root else { return 0 }\n\n        findPathSum(root)\n\n        return maxPathSum\n    }\n\n    @discardableResult\n    private func findPathSum(_ root: TreeNode?) -> Int {\n        guard let currentNode = root else { return 0 }\n\n        let leftPathSum = findPathSum(currentNode.left)\n        let rightPathSum = findPathSum(currentNode.right)\n\n        let currentPathSum = max(leftPathSum, rightPathSum) + currentNode.val\n        let possibleMaxPathSum = max(currentPathSum, leftPathSum + rightPathSum + currentNode.val)\n        maxPathSum = max(maxPathSum, possibleMaxPathSum)\n\n        return currentPathSum\n    }\n}\n","compare_result":"1111111111111011011111111111111111111111111111111111110111111111111111111111110111111101111111","title_slug":"binary-tree-maximum-path-sum"}