{"id":658535480,"lang":"swift","time":"3 months, 3 weeks","timestamp":1647105997,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/658535480/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"14.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func preorderTraversal(_ root: TreeNode?) -> [Int] {\n        guard let rootNode = root else { return [] }\n        \n        let leftPreorderTraversal = preorderTraversal(rootNode.left)\n        let rightPreorderTraversal = preorderTraversal(rootNode.right)\n        \n        return [rootNode.val] + leftPreorderTraversal + rightPreorderTraversal\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}