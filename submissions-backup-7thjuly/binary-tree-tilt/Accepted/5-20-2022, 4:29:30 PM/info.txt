{"id":703468171,"lang":"swift","time":"1 month, 2 weeks","timestamp":1653056970,"status_display":"Accepted","runtime":"205 ms","url":"/submissions/detail/703468171/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"14.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func findTilt(_ root: TreeNode?) -> Int {\n        guard let currentNode = root else { return 0 }\n        \n        let leftTilt = findTilt(currentNode.left)\n        let rightTilt = findTilt(currentNode.right)\n        \n        let leftChildsSum = findSum(currentNode.left)\n        let rightChildsSum = findSum(currentNode.right)\n        let currentNodeTilt = abs(leftChildsSum-rightChildsSum)\n        \n        return currentNodeTilt + leftTilt + rightTilt\n    }\n    \n    private func findSum(_ root: TreeNode?) -> Int {\n        guard let currentNode = root else { return 0 }\n\n        let leftSum = findSum(currentNode.left)\n        let rightSum = findSum(currentNode.right)\n\n        let currentNodeSum = currentNode.val\n        \n        return currentNodeSum + leftSum + rightSum\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt"}