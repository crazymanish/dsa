{"id":658575264,"lang":"swift","time":"3 months, 3 weeks","timestamp":1647110311,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/658575264/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func findTilt(_ root: TreeNode?) -> Int {\n        guard let currentNode = root else { return 0 }\n\n        let leftChildValue = currentNode.left?.val ?? 0\n        let rightChildValue = currentNode.right?.val ?? 0\n        let currentNodeTilt = abs(leftChildValue-rightChildValue)\n        \n        let leftTilt = findTilt(currentNode.left)\n        let rightTilt = findTilt(currentNode.right)\n        \n        return currentNodeTilt + leftTilt + rightTilt\n    }\n}","compare_result":"10010001111111000001000000000001000000000000001000000000000000000000000000000","title_slug":"binary-tree-tilt"}