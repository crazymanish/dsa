{"id":668246320,"lang":"swift","time":"3 months, 1 week","timestamp":1648378823,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/668246320/","is_pending":"Not Pending","title":"Check Whether Two Strings are Almost Equivalent","memory":"14.4 MB","code":"class Solution {\n    func checkAlmostEquivalent(_ word1: String, _ word2: String) -> Bool {\n        let word1HashMap = addIntoHashMap(word1)\n        let word2HashMap = addIntoHashMap(word2)\n        \n        var isEquivalent = true\n        isEquivalent = isAlmostEquivalent(word1HashMap, word2HashMap)\n        \n        if isEquivalent {\n            isEquivalent = isAlmostEquivalent(word2HashMap, word1HashMap)\n        }\n        \n        return isEquivalent\n    }\n    \n    private func addIntoHashMap(_ word: String) -> [Character : Int] {\n        var hashMap: [Character : Int] = [:]\n        \n        for char in word {\n            if let hashMapValue = hashMap[char] {\n                hashMap[char] = hashMapValue + 1\n            } else {\n                hashMap[char] = 1\n            }\n        }\n        \n        return hashMap\n    }\n    \n    private func isAlmostEquivalent(_ hash1: [Character : Int], _ hash2: [Character : Int]) -> Bool {\n        var isAlmostEquivalent = true\n        \n        for (key, value) in hash1 {\n            let hash2Value = hash2[key] ?? 0\n            \n            if abs(hash2Value - value) > 3 {\n                isAlmostEquivalent = false\n                break   \n            }\n        }\n        \n        return isAlmostEquivalent\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"check-whether-two-strings-are-almost-equivalent"}