{"id":696307413,"lang":"swift","time":"1 month, 4 weeks","timestamp":1652123142,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/696307413/","is_pending":"Not Pending","title":"Combination Sum","memory":"13.8 MB","code":"class Solution {\n    func combinationSum(_ candidates: [Int], _ target: Int) -> [[Int]] {\n        let lastIndex = candidates.count-1\n        \n        var allCombinations: [[Int]] = []\n        var currentCombination: [Int] = []\n        var currentCombinationSum = 0\n\n        func findCombinations(_ currentIndex: Int) {\n            if currentCombinationSum == target {\n                allCombinations.append(currentCombination)\n                return\n            }\n            \n            if currentCombinationSum > target { return }\n            if currentIndex > lastIndex { return }\n\n            // Choice1: Consider current index value for combination-sum\n            let value = candidates[currentIndex]\n                \n            currentCombination.append(value)\n            currentCombinationSum += value\n                \n            findCombinations(currentIndex)\n                \n            currentCombination.removeLast() // backtracking\n            currentCombinationSum -= value // backtracking\n                \n            // Choice2: Ignore current index value for combination-sum\n            findCombinations(currentIndex+1)\n        }\n\n        findCombinations(0)\n        return allCombinations\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum"}