{"id":696290399,"lang":"swift","time":"1 month, 4 weeks","timestamp":1652121306,"status_display":"Accepted","runtime":"150 ms","url":"/submissions/detail/696290399/","is_pending":"Not Pending","title":"Combinations","memory":"15.7 MB","code":"class Solution {\n    func combine(_ n: Int, _ k: Int) -> [[Int]] {\n        var allCombinations: [[Int]] = []\n        var currentCombination: [Int] = []\n\n        func findCombinations(_ currentNumber: Int) {\n            if currentCombination.count == k {\n                allCombinations.append(currentCombination)\n                return\n            }\n\n            if currentNumber > n { return }\n\n            for number in currentNumber...n {\n                currentCombination.append(number)\n\n                findCombinations(number+1)\n\n                currentCombination.removeLast() // backtracking\n            }\n        }\n\n        findCombinations(1)\n        return allCombinations\n    }\n}\n","compare_result":"111111111111111111111111111","title_slug":"combinations"}