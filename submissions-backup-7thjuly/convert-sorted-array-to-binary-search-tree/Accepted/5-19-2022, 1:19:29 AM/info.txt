{"id":702396534,"lang":"swift","time":"1 month, 2 weeks","timestamp":1652915969,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/702396534/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"15.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func sortedArrayToBST(_ nums: [Int]) -> TreeNode? {\n        if nums.isEmpty { return nil }\n\n        let mid = nums.count / 2\n\n        let root = TreeNode(nums[mid])\n        let left = sortedArrayToBST(Array(nums[0..<mid]))\n        let right = sortedArrayToBST(Array(nums[mid+1..<nums.count]))\n\n        root.left = left\n        root.right = right\n\n        return root\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}