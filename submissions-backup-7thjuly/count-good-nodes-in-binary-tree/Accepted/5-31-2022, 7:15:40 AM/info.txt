{"id":711032120,"lang":"swift","time":"1 month, 1 week","timestamp":1653974140,"status_display":"Accepted","runtime":"843 ms","url":"/submissions/detail/711032120/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"18.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    private var goodNodes = 0\n\n    func goodNodes(_ root: TreeNode?) -> Int {\n        guard let root = root else { return 0 }\n\n        findGoodNodes(root, currentPathMaxNode: root.val)\n\n        return goodNodes\n    }\n\n    private func findGoodNodes(_ root: TreeNode?, currentPathMaxNode: Int) {\n        guard let currentNode = root else { return }\n\n        var newMaxNodeValue = currentPathMaxNode\n        if currentNode.val >= currentPathMaxNode {\n            newMaxNodeValue = currentNode.val\n\n            goodNodes += 1\n        }\n\n        findGoodNodes(currentNode.left, currentPathMaxNode: newMaxNodeValue)\n        findGoodNodes(currentNode.right, currentPathMaxNode: newMaxNodeValue)\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}