{"id":739080129,"lang":"swift","time":"2 days, 8 hours","timestamp":1657021269,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/739080129/","is_pending":"Not Pending","title":"Count Largest Group","memory":"13.9 MB","code":"class Solution {\n    func countLargestGroup(_ n: Int) -> Int {\n        var hashMap: [Int : Int] = [:]\n        \n        var mutatedN = n\n        while mutatedN > 0 {\n            var number = mutatedN\n            var numberSum = 0\n            while number > 0 {\n                numberSum += number % 10\n                number /= 10\n            }\n            \n            if let hashMapValue = hashMap[numberSum] {\n                hashMap[numberSum] = hashMapValue + 1\n            } else {\n                hashMap[numberSum] = 1\n            }\n            \n            mutatedN -= 1\n        }\n        \n        var groupHashMap: [Int : Int] = [:]\n        for (_, value) in hashMap {\n            if let hashMapValue = groupHashMap[value] {\n                groupHashMap[value] = hashMapValue + 1\n            } else {\n                groupHashMap[value] = 1\n            }\n        }\n        \n        var largestGroup: (key: Int, value: Int) = (key: Int.min, value: Int.min)\n        for (key, value) in groupHashMap {\n            if key > largestGroup.key {\n                largestGroup = (key: key, value: value)\n            }\n        }\n        \n        return largestGroup.value\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-largest-group"}