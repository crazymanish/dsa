{"id":671846067,"lang":"swift","time":"3Â months","timestamp":1648847936,"status_display":"Accepted","runtime":"1728 ms","url":"/submissions/detail/671846067/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"36.8 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init() { self.val = 0; self.next = nil; }\n *     public init(_ val: Int) { self.val = val; self.next = nil; }\n *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }\n * }\n */\nclass Solution {\n    func deleteMiddle(_ head: ListNode?) -> ListNode? {\n        if head == nil || head?.next == nil { return nil }\n        \n        let dummyNode = ListNode(-1, head)\n        var slowPointer: ListNode? = dummyNode\n        var fastPointer = head\n        \n        while fastPointer?.next != nil {\n            slowPointer = slowPointer?.next\n            fastPointer = fastPointer?.next?.next\n        }\n        \n        slowPointer?.next = slowPointer?.next?.next\n        \n        return head\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list"}