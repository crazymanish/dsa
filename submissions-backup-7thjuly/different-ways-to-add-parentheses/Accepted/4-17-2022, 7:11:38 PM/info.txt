{"id":682271994,"lang":"swift","time":"2 months, 3 weeks","timestamp":1650215498,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/682271994/","is_pending":"Not Pending","title":"Different Ways to Add Parentheses","memory":"14.8 MB","code":"class Solution {\n    private var dpCacheHashMap: [String : [Int]] = [:]\n\n    func diffWaysToCompute(_ input: String) -> [Int] {\n        var output: [Int] = []\n\n        for (index, char) in input.enumerated() {\n            if char == \"+\" || char == \"-\" || char == \"*\" {\n                let leftEndIndex = input.index(input.startIndex, offsetBy: index)\n                let rightStartIndex = input.index(input.startIndex, offsetBy: index+1)\n                let leftString = String(input.prefix(upTo: leftEndIndex))\n                let rightString = String(input.suffix(from: rightStartIndex))\n\n                let leftResults = dpCacheHashMap[leftString] ?? diffWaysToCompute(leftString)\n                let rightResults = dpCacheHashMap[rightString] ?? diffWaysToCompute(rightString)\n\n                for leftResult in leftResults {\n                    for rightResult in rightResults {\n                        if char == \"+\" { output.append(leftResult + rightResult) }\n                        if char == \"-\" { output.append(leftResult - rightResult) }\n                        if char == \"*\" { output.append(leftResult * rightResult) }\n                    }\n                }\n            }\n        }\n\n        if output.count == 0 { output.append(Int(input)!) }\n\n        dpCacheHashMap[input] = output // Update cache\n\n        return output\n    }\n}\n","compare_result":"1111111111111111111111111","title_slug":"different-ways-to-add-parentheses"}