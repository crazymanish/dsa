{"id":671708139,"lang":"swift","time":"3 months, 1 week","timestamp":1648830633,"status_display":"Accepted","runtime":"712 ms","url":"/submissions/detail/671708139/","is_pending":"Not Pending","title":"Divide Array in Sets of K Consecutive Numbers","memory":"22.9 MB","code":"class Solution {\n    func isPossibleDivide(_ nums: [Int], _ k: Int) -> Bool {\n        var hashMap: [Int: Int] = [:]\n        for num in nums {\n            let hashMapValue = hashMap[num] ?? 0\n            hashMap[num] = hashMapValue + 1\n        }\n        \n        var sortedNums = nums.sorted()\n        \n        for num in sortedNums {\n            if let hashMapValue = hashMap[num], hashMapValue > 0 {\n                for consecutiveNum in num..<(num+k) {\n                    let consecutiveHashMapValue = hashMap[consecutiveNum] ?? 0\n                    hashMap[consecutiveNum] = consecutiveHashMapValue - hashMapValue\n                    \n                    if hashMap[consecutiveNum]! < 0 { return false }\n                }\n            }\n        }\n        \n        return true\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"divide-array-in-sets-of-k-consecutive-numbers"}