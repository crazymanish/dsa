{"id":670248875,"lang":"swift","time":"3 months, 1 week","timestamp":1648630219,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/670248875/","is_pending":"Not Pending","title":"Encode and Decode TinyURL","memory":"14.6 MB","code":"class Codec {\n    var hashMap: [String: String] = [:]\n    \n    // Encodes a URL to a shortened URL.\n    func encode(_ longUrl: String) -> String {\n        let uuid = UUID().uuidString\n        hashMap[uuid] = longUrl\n        \n        return uuid\n    }\n    \n    // Decodes a shortened URL to its original URL.\n    func decode(_ shortUrl: String) -> String {\n        return hashMap[shortUrl] ?? \"404\"\n    }\n}\n\n/**\n * Your Codec object will be instantiated and called as such:\n * let obj = Codec()\n * val s = obj.encode(longUrl)\n * let ans = obj.decode(s)\n*/","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"encode-and-decode-tinyurl"}