{"id":688687929,"lang":"swift","time":"2 months, 1 week","timestamp":1651088036,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/688687929/","is_pending":"Not Pending","title":"Find K Pairs with Smallest Sums","memory":"N/A","code":"class Solution {\n    func kSmallestPairs(_ nums1: [Int], _ nums2: [Int], _ k: Int) -> [[Int]] {\n        var hashMap: [Int: [[Int]]] = [:]\n        var pairSums: [Int] = []\n        \n        for nums1Value in nums1 {\n            for nums2Value in nums2 {\n                let pairSum = nums1Value + nums2Value\n                \n                if let hashMapValue = hashMap[pairSum] {\n                    hashMap[pairSum] = hashMapValue + [[nums1Value, nums2Value]]   \n                } else {\n                    hashMap[pairSum] = [[nums1Value, nums2Value]]\n                    pairSums.append(pairSum)\n                }\n            }\n        }\n        \n        pairSums = pairSums.sorted()\n        \n        var output: [[Int]] = []\n        for pairSum in pairSums {\n            let outputCount = output.count\n            if outputCount == k { break }\n            \n            let pairs = hashMap[pairSum]!\n            if outputCount + pairs.count <= k {\n                output += pairs\n            } else {\n                let remainingCount = k-outputCount\n                for index in 0..<remainingCount {\n                    output.append(pairs[index])\n                }\n            }\n        }\n        \n        return output\n    }\n}","compare_result":"11111111111111111111100000000000000","title_slug":"find-k-pairs-with-smallest-sums"}