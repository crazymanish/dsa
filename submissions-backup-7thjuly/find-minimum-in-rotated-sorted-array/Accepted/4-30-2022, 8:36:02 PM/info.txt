{"id":690401181,"lang":"swift","time":"2 months, 1 week","timestamp":1651343762,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/690401181/","is_pending":"Not Pending","title":"Find Minimum in Rotated Sorted Array","memory":"14.4 MB","code":"class Solution {\n    func findMin(_ nums: [Int]) -> Int {\n        let target = nums[0]\n        let lastIndex = nums.count-1\n        \n        func rotatedArrayBinarySearch(_ startIndex: Int, _ endIndex: Int) -> Int {\n            if startIndex > endIndex { return target } // Not found, base-case\n            \n            let midIndex = startIndex + (endIndex-startIndex) / 2\n            let midIndexValue = nums[midIndex]\n            \n            var output = min(midIndexValue, target)\n            \n            // Look into left side\n            let leftOutput = rotatedArrayBinarySearch(startIndex, midIndex-1)\n            output = min(leftOutput, output)\n            \n            // Look into right side\n            let rightOutput = rotatedArrayBinarySearch(midIndex+1, endIndex)\n            output = min(rightOutput, output)\n            \n            // Look into right side for rotated\n            let rightValue = midIndex+1 <= lastIndex ? nums[midIndex+1] : Int.max\n            if rightValue < midIndexValue { \n                let rotatedOutput = rotatedArrayBinarySearch(midIndex+1, endIndex) \n                output = min(rotatedOutput, output)\n            }\n            \n            return output\n        }\n        \n        return rotatedArrayBinarySearch(0, lastIndex)\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-minimum-in-rotated-sorted-array"}