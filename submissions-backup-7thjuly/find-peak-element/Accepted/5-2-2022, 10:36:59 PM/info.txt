{"id":691840643,"lang":"swift","time":"2Â months","timestamp":1651523819,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/691840643/","is_pending":"Not Pending","title":"Find Peak Element","memory":"14 MB","code":"class Solution {\n    func findPeakElement(_ nums: [Int]) -> Int {\n        return peakIndexInMountainArray(nums)\n    }\n\n    // Ditto code: 852. Peak Index in a Mountain Array\n    // https://leetcode.com/problems/peak-index-in-a-mountain-array/\n    private func peakIndexInMountainArray(_ arr: [Int]) -> Int {\n        var startIndex = 0\n        var endIndex = arr.count-1\n        var midIndex = -1\n        \n        while startIndex <= endIndex {\n            midIndex = startIndex + (endIndex-startIndex) / 2\n            let midIndexValue = arr[midIndex]\n            \n            var leftValueOfMidIndex = Int.min\n            var rightValueOfMidIndex = Int.min\n            if midIndex-1 >= startIndex { leftValueOfMidIndex = arr[midIndex-1] }\n            if midIndex+1 <= endIndex { rightValueOfMidIndex = arr[midIndex+1] }\n            \n            if midIndexValue > leftValueOfMidIndex && midIndexValue > rightValueOfMidIndex {\n                break // we found the answer\n            } else if leftValueOfMidIndex > midIndexValue {\n                endIndex = midIndex-1 // Let's find answer in left-side\n            } else {\n                startIndex = midIndex+1 // Let's find answer in right-side\n            }\n        }\n        \n        return midIndex\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element"}