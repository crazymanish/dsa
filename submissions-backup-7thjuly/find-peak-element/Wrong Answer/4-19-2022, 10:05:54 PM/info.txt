{"id":683687111,"lang":"swift","time":"2 months, 2 weeks","timestamp":1650398754,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/683687111/","is_pending":"Not Pending","title":"Find Peak Element","memory":"N/A","code":"class Solution {\n    func findPeakElement(_ nums: [Int]) -> Int {\n        \n        func findPeakElementIndex(_ startIndex: Int, _ endIndex: Int) -> Int {\n            if endIndex - startIndex < 2 { return 0 }\n            \n            let midIndex = startIndex + ((endIndex - startIndex) / 2)\n            \n            var isGreaterThanLeft = true\n            if (midIndex-1 >= startIndex && nums[midIndex] < nums[midIndex-1]) {\n                isGreaterThanLeft = false\n            }\n            \n            var isGreaterThanRight = true\n            if (midIndex+1 < endIndex && nums[midIndex] < nums[midIndex+1]) {\n                isGreaterThanRight = false\n            }\n            \n            if isGreaterThanLeft && isGreaterThanRight {\n                return midIndex\n            }\n            \n            let leftPeakIndex = findPeakElementIndex(startIndex, midIndex-1)\n            let rightPeakIndex = findPeakElementIndex(midIndex+1, endIndex)\n            \n            if leftPeakIndex != 0 { return leftPeakIndex }\n            if rightPeakIndex != 0 { return rightPeakIndex }\n            \n            return 0\n        }\n        \n        return findPeakElementIndex(0, nums.count)\n    }\n}","compare_result":"111111111111010011111010100101111010000111010111000000000000000","title_slug":"find-peak-element"}