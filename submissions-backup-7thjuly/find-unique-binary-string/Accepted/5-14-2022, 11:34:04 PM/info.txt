{"id":699564379,"lang":"swift","time":"1 month, 3 weeks","timestamp":1652564044,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/699564379/","is_pending":"Not Pending","title":"Find Unique Binary String","memory":"14.5 MB","code":"class Solution {\n    func findDifferentBinaryString(_ nums: [String]) -> String {\n        let lastIndex = nums.count-1\n        var answer: String? = nil\n        var currentSubset: String = \"\"\n        \n        func findAllSubSets(_ currentIndex: Int) {\n            // means, we already have answer, no more looking\n            if answer != nil { return }\n            \n            // Base case, when we found one subset\n            if currentIndex > lastIndex { \n                \n                // Update answer if this does not contain in input nums array\n                if nums.contains(currentSubset) == false && answer == nil {\n                    answer = currentSubset\n                }\n                \n                return \n            }\n            \n            // Choice1:add \"0\" value into currentSubset\n            currentSubset += \"0\"\n            findAllSubSets(currentIndex+1)\n            currentSubset.removeLast() // backtracking\n            \n            // Choice2:add \"1\" value into currentSubset\n            currentSubset += \"1\"\n            findAllSubSets(currentIndex+1)\n            currentSubset.removeLast() // backtracking\n        }\n        \n        findAllSubSets(0)\n        return answer ?? \"\"\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-unique-binary-string"}