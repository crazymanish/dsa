{"id":686062024,"lang":"swift","time":"2 months, 2 weeks","timestamp":1650731621,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/686062024/","is_pending":"Not Pending","title":"House Robber II","memory":"N/A","code":"class Solution {\n    func rob(_ nums: [Int]) -> Int {\n        let houseCount = nums.count\n        \n        if houseCount <= 2 { return 0 } // Police will come if try to rob 1 house or 2 house\n        \n        var dpCache = Array(repeating: -1, count: houseCount)\n        dpCache[0] = nums[0]\n        dpCache[1] = nums[1]\n        \n        for (currentHouseIndex, currentHouseMoney) in nums.enumerated() {\n            if currentHouseIndex <= 2 { continue }\n            \n            let previousHouseMoney = dpCache[currentHouseIndex-1]\n            let previousPreviousHouseMoney = dpCache[currentHouseIndex-2]\n            \n            let maxRobMoney: Int\n            if currentHouseIndex+1 == houseCount && houseCount % 2 != 0 { // last house with ODD count\n                maxRobMoney = max(currentHouseMoney-nums[0]+previousPreviousHouseMoney, previousHouseMoney)\n            } else {\n                maxRobMoney = max(currentHouseMoney+previousPreviousHouseMoney, previousHouseMoney)\n            }\n            \n            dpCache[currentHouseIndex] = maxRobMoney\n        }\n        \n        return dpCache.last!\n    }\n}\n","compare_result":"000100100000000010101111111011000000001000001110010100101000110000000001101","title_slug":"house-robber-ii"}