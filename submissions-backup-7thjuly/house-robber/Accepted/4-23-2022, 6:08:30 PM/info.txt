{"id":686050044,"lang":"swift","time":"2 months, 2 weeks","timestamp":1650730110,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/686050044/","is_pending":"Not Pending","title":"House Robber","memory":"14.4 MB","code":"class Solution {\n    func rob(_ nums: [Int]) -> Int {\n        let houseCount = nums.count\n        \n        var dpCache = Array(repeating: -1, count: houseCount)\n        \n        for (currentHouseIndex, currentHouseMoney) in nums.enumerated() {\n            var previousHouseMoney = 0\n            if currentHouseIndex-1 >= 0 { previousHouseMoney = dpCache[currentHouseIndex-1] }\n            \n            var previousPreviousHouseMoney = 0\n            if currentHouseIndex-2 >= 0 { previousPreviousHouseMoney = dpCache[currentHouseIndex-2] }\n            \n            let maxRobMoney = max(currentHouseMoney+previousPreviousHouseMoney, previousHouseMoney)\n            dpCache[currentHouseIndex] = maxRobMoney\n        }\n        \n        return dpCache.last!\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber"}