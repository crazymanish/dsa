{"id":671674546,"lang":"swift","time":"3 months, 1 week","timestamp":1648826567,"status_display":"Accepted","runtime":"3821 ms","url":"/submissions/detail/671674546/","is_pending":"Not Pending","title":"Implement Magic Dictionary","memory":"14.8 MB","code":"class MagicDictionary {\n    var set: Set<String>\n    \n    init() {\n        set = []\n    }\n    \n    func buildDict(_ dictionary: [String]) {\n        for word in dictionary { set.insert(word) }\n    }\n    \n    func search(_ searchWord: String) -> Bool {\n        if set.isEmpty { return false }\n        \n        for word in set {\n            if word.count == searchWord.count {\n                var diff = 0\n                for index in 0..<word.count {\n                    let wordChar = word[index]\n                    let searchWordChar = searchWord[index]\n                    \n                    if wordChar != searchWordChar { diff += 1 }\n                }\n                \n                if diff == 1 { return true }\n            }\n        }\n        \n        return false\n    }\n}\n\nprivate extension StringProtocol {\n    subscript(_ offset: Int) -> Element { self[index(startIndex, offsetBy: offset)] }\n}\n\n/**\n * Your MagicDictionary object will be instantiated and called as such:\n * let obj = MagicDictionary()\n * obj.buildDict(dictionary)\n * let ret_2: Bool = obj.search(searchWord)\n */","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"implement-magic-dictionary"}