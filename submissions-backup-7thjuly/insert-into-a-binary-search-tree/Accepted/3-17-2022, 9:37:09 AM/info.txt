{"id":661718007,"lang":"swift","time":"3 months, 3 weeks","timestamp":1647506229,"status_display":"Accepted","runtime":"269 ms","url":"/submissions/detail/661718007/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"15.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    private var rootNode: TreeNode? = nil\n    \n    func insertIntoBST(_ root: TreeNode?, _ val: Int) -> TreeNode? {\n        guard let root = root else { return TreeNode(val) }\n        \n        rootNode = root\n        insert(rootNode, val)\n        \n        return rootNode\n    }\n    \n    private func insert(_ root: TreeNode?, _ val: Int) -> TreeNode? {\n        guard let currentNode = root else { return TreeNode(val) }\n        \n        if currentNode.val < val {\n            if currentNode.right == nil {\n                currentNode.right = insert(currentNode.right, val)\n            } else {\n                return insert(currentNode.right, val)   \n            }\n        } else {\n            if currentNode.left == nil {\n                currentNode.left = insert(currentNode.left, val)  \n            } else {\n                return insert(currentNode.left, val)  \n            }\n        }\n        \n        return currentNode\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}