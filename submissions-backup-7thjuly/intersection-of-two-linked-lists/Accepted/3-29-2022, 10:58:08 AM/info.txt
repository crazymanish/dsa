{"id":669558739,"lang":"swift","time":"3 months, 1 week","timestamp":1648544288,"status_display":"Accepted","runtime":"332 ms","url":"/submissions/detail/669558739/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"16.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init(_ val: Int) {\n *         self.val = val\n *         self.next = nil\n *     }\n * }\n */\n\nclass Solution {\n    func getIntersectionNode(_ headA: ListNode?, _ headB: ListNode?) -> ListNode? {\n        if headA == nil || headB == nil { return nil }\n        \n        var head1 = headA\n        var head2 = headB\n        \n        var head1count = 0\n        var head2count = 0\n        \n        while head1 != nil {\n            head1count += 1\n            head1 = head1?.next\n        }\n        \n        while head2 != nil {\n            head2count += 1\n            head2 = head2?.next\n        }\n        \n        var diff = abs(head2count-head1count)\n        head1 = headA\n        head2 = headB\n        \n        if diff > 0 {\n            if head1count > head2count {\n                while diff != 0 {\n                    diff -= 1\n                    head1 = head1?.next\n                }\n            } else {\n                while diff != 0 {\n                    diff -= 1\n                    head2 = head2?.next\n                }\n            }   \n        }\n        \n        var intersectionNode: ListNode? = nil\n        \n        while true {            \n            if head1 == nil || head2 == nil { break }\n            \n            if head1! === head2! {\n                intersectionNode = head1\n                break\n            }\n            \n            head1 = head1?.next\n            head2 = head2?.next\n        }\n        \n        \n        return intersectionNode\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}