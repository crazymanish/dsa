{"id":669628746,"lang":"swift","time":"3 months, 1 week","timestamp":1648555800,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/669628746/","is_pending":"Not Pending","title":"Isomorphic Strings","memory":"N/A","code":"class Solution {\n    func isIsomorphic(_ s: String, _ t: String) -> Bool {\n        var hashMap: [Character : Character] = [:] // Map s with t\n        var hashMap2: [Character : Bool] = [:] // Just keep track of t that already mapped\n        var isIsomorphic = true\n        \n        for index in 0..<s.count {\n            let sValue = s[index]\n            let tValue = t[index]\n            \n            if hashMap[sValue] == nil {\n                hashMap[sValue] = tValue\n                \n                if hashMap2[tValue] == nil {\n                    hashMap2[tValue] = true   \n                } else {\n                    isIsomorphic = false\n                    break    \n                }\n                \n                continue\n            }\n            \n            if let hashMapTValue = hashMap[sValue], hashMapTValue != tValue {\n                isIsomorphic = false\n                break   \n            }\n        }\n        \n        return isIsomorphic\n    }\n}\n\nprivate extension StringProtocol {\n    subscript(offset: Int) -> Character {\n        self[index(startIndex, offsetBy: offset)]\n    }\n}","compare_result":"1111111111111111111111111111111111111110000","title_slug":"isomorphic-strings"}