{"id":737257631,"lang":"swift","time":"4 days, 12 hours","timestamp":1656834873,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/737257631/","is_pending":"Not Pending","title":"Keyboard Row","memory":"14.6 MB","code":"class Solution {\n    func findWords(_ words: [String]) -> [String] {\n        var hashMap: [Character : Int] = [\"q\":1,\"w\":1,\"e\":1,\"r\":1,\"t\":1,\"y\":1,\"u\":1,\"i\":1,\"o\":1,\"p\":1,\"a\":2,\"s\":2,\"d\":2,\"f\":2,\"g\":2,\"h\":2,\"j\":2,\"k\":2,\"l\":2,\"z\":3,\"x\":3,\"c\":3,\"v\":3,\"b\":3,\"n\":3,\"m\":3]\n        \n        var outputWords: [String] = []\n        \n        for word in words {\n            var canTypeUsingOneRow = true\n            var initialCharRow: Int? = nil\n            for char in word.lowercased() {\n                if let expectedRow = initialCharRow {\n                    if expectedRow != hashMap[char]! {\n                        canTypeUsingOneRow = false\n                        break\n                    }\n                } else {\n                    initialCharRow = hashMap[char]\n                }\n            }\n            \n            if canTypeUsingOneRow { outputWords.append(word) }\n        }\n        \n        return outputWords\n    }\n}","compare_result":"1111111111111111111111","title_slug":"keyboard-row"}