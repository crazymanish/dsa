{"id":662624586,"lang":"swift","time":"3 months, 3 weeks","timestamp":1647636087,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/662624586/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"15.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func kthSmallest(_ root: TreeNode?, _ k: Int) -> Int {\n        guard let root = root else { return 0 }\n        \n        let allElements = inorderTraversal(root)\n        \n        return allElements[k-1]\n    }\n    \n    private func inorderTraversal(_ root: TreeNode?) -> [Int] {\n        guard let currentNode = root else { return [] }\n        \n        let leftInorderTraversal = inorderTraversal(currentNode.left)\n        let rightInorderTraversal = inorderTraversal(currentNode.right)\n\n        return leftInorderTraversal + [currentNode.val] + rightInorderTraversal\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}