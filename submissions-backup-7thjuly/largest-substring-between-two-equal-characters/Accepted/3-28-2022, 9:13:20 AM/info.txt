{"id":668816686,"lang":"swift","time":"3 months, 1 week","timestamp":1648451600,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/668816686/","is_pending":"Not Pending","title":"Largest Substring Between Two Equal Characters","memory":"14.1 MB","code":"class Solution {\n    func maxLengthBetweenEqualCharacters(_ string: String) -> Int {\n        var hashMap: [Character : Index] = [:]\n        \n        var index = 0\n        for char in string {\n            if var hashMapValue = hashMap[char] {\n                hashMapValue.endIndex = index\n            } else {\n                hashMap[char] = Index(index, -1)\n            }\n            \n            index += 1\n        }\n        \n        var maxLengthIndex = Index(-1, -1)\n        \n        for (_, value) in hashMap {\n            maxLengthIndex = maxLength(maxLengthIndex, value)\n        }\n        \n        if maxLengthIndex.endIndex == -1 { return -1 }\n\n        return maxLengthIndex.endIndex - maxLengthIndex.startIndex - 1\n    }\n    \n    private func maxLength(_ index1: Index, _ index2: Index) -> Index {\n        let index1Length = index1.endIndex - index1.startIndex\n        let index2Length = index2.endIndex - index2.startIndex\n        \n        if index1Length > index2Length {\n            return index1\n        } else {\n            return index2\n        }\n    } \n}\n\nprivate class Index {\n    let startIndex: Int\n    var endIndex: Int\n    \n    init(_ startIndex: Int, _ endIndex: Int) {\n        self.startIndex = startIndex\n        self.endIndex = endIndex\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"largest-substring-between-two-equal-characters"}