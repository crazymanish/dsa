{"id":699527328,"lang":"swift","time":"1 month, 3 weeks","timestamp":1652558932,"status_display":"Accepted","runtime":"129 ms","url":"/submissions/detail/699527328/","is_pending":"Not Pending","title":"Letter Case Permutation","memory":"14.8 MB","code":"class Solution {\n    func letterCasePermutation(_ s: String) -> [String] {\n        let lastIndex = s.count-1\n        let sArray = Array(s)\n        var allSubsets: Set<String> = []\n        var lowercaseSubset: String = \"\"\n        var uppercaseSubset: String = \"\"\n        \n        func findAllSubSets(_ currentIndex: Int) {\n            if currentIndex > lastIndex { \n                allSubsets.insert(lowercaseSubset)\n                allSubsets.insert(uppercaseSubset)\n                return \n            }\n            \n            let currentIndexValue = String(sArray[currentIndex])\n            \n            // Choice1: \n            // - add Uppercase value into uppercaseSubset\n            // - add Lowercase value into lowercaseSubset\n            uppercaseSubset += currentIndexValue.uppercased()\n            lowercaseSubset += currentIndexValue.lowercased()\n            findAllSubSets(currentIndex+1)\n            uppercaseSubset.removeLast() // backtracking\n            lowercaseSubset.removeLast() // backtracking   \n            \n            // Choice1: Reverse\n            // - add Lowercase value into uppercaseSubset\n            // - add Uppercase value into lowercaseSubset\n            uppercaseSubset += currentIndexValue.lowercased()\n            lowercaseSubset += currentIndexValue.uppercased()\n            findAllSubSets(currentIndex+1)\n            uppercaseSubset.removeLast() // backtracking\n            lowercaseSubset.removeLast() // backtracking \n        }\n        \n        findAllSubSets(0)\n        return Array(allSubsets)\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"letter-case-permutation"}