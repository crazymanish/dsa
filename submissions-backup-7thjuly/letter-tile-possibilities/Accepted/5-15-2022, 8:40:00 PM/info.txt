{"id":700190734,"lang":"swift","time":"1 month, 3 weeks","timestamp":1652640000,"status_display":"Accepted","runtime":"93 ms","url":"/submissions/detail/700190734/","is_pending":"Not Pending","title":"Letter Tile Possibilities","memory":"15.1 MB","code":"class Solution {\n    func numTilePossibilities(_ tiles: String) -> Int {\n        let lastIndex = tiles.count-1\n        var tilesArray = Array(tiles)\n        var allPermutations: Set<String> = []\n        var currentPermutation: String = \"\"\n        \n        func findPermutations(_ currentIndex: Int) {\n            if currentIndex > lastIndex { return }\n            \n            for permutationIndex in currentIndex...lastIndex {\n                swap(currentIndex, permutationIndex)\n                \n                let currentIndexValue = String(tilesArray[currentIndex])\n                currentPermutation.append(currentIndexValue)\n                allPermutations.insert(currentPermutation)\n                \n                findPermutations(currentIndex+1)\n                \n                // backtracking\n                swap(currentIndex, permutationIndex)\n                currentPermutation.removeLast()\n            }\n        }\n        \n        func swap(_ firstIndex: Int, _ secondIndex: Int) {\n            let temp = tilesArray[firstIndex]\n            tilesArray[firstIndex] = tilesArray[secondIndex]\n            tilesArray[secondIndex] = temp\n        }\n        \n        findPermutations(0)\n        return allPermutations.count\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"letter-tile-possibilities"}