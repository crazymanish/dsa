{"id":671201104,"lang":"swift","time":"3 months, 1 week","timestamp":1648757826,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/671201104/","is_pending":"Not Pending","title":"Linked List Components","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init() { self.val = 0; self.next = nil; }\n *     public init(_ val: Int) { self.val = val; self.next = nil; }\n *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }\n * }\n */\nclass Solution {\n    func numComponents(_ head: ListNode?, _ nums: [Int]) -> Int {\n        var hashMap: [Int : Bool] = [:]\n        for num in nums { hashMap[num] = true }\n        \n        var output = 0\n        var currentNode = head\n        \n        while currentNode?.next != nil {\n            let currentNodeValue = currentNode!.val\n            let nextNodeValue = currentNode!.next!.val\n            \n            if hashMap[currentNodeValue] != nil || hashMap[nextNodeValue] != nil {\n                output += 1\n            }\n            \n            currentNode = currentNode!.next!.next\n        }\n        \n        return output\n    }\n}","compare_result":"110011000100101000001000110000100100100001000000000000001","title_slug":"linked-list-components"}