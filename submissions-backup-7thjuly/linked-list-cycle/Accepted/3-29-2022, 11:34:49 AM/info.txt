{"id":669572491,"lang":"swift","time":"3 months, 1 week","timestamp":1648546489,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/669572491/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"16 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init(_ val: Int) {\n *         self.val = val\n *         self.next = nil\n *     }\n * }\n */\n\nclass Solution {\n    func hasCycle(_ head: ListNode?) -> Bool {\n        if head == nil { return false }\n        \n        var slowPointer = head\n        var fastPointer = head?.next\n        \n        var hasCycle = false\n        \n        while true {\n            if fastPointer == nil { break }\n            \n            if fastPointer === slowPointer {\n                hasCycle = true\n                break\n            }\n            \n            slowPointer = slowPointer?.next\n            fastPointer = fastPointer?.next?.next\n        }\n        \n        return hasCycle\n    }\n}","compare_result":"111111111111111111111","title_slug":"linked-list-cycle"}