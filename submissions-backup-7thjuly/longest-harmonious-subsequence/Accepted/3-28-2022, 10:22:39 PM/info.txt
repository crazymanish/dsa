{"id":669201101,"lang":"swift","time":"3 months, 1 week","timestamp":1648498959,"status_display":"Accepted","runtime":"421 ms","url":"/submissions/detail/669201101/","is_pending":"Not Pending","title":"Longest Harmonious Subsequence","memory":"14.7 MB","code":"class Solution {\n    func findLHS(_ nums: [Int]) -> Int {\n        var hashMap: [Int : Int] = [:]\n        \n        for num in nums {\n            let hashMapValue = hashMap[num] ?? 0\n            hashMap[num] = hashMapValue + 1\n        }\n        \n        var outputResult = 0\n        \n        for (key, value) in hashMap {\n            if let plusOneValue = hashMap[key+1] {\n                let result = value + plusOneValue\n                outputResult = max(outputResult, result)\n            }\n        }\n        \n        return outputResult\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-harmonious-subsequence"}