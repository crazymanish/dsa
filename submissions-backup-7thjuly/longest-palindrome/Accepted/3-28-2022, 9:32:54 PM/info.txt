{"id":669175915,"lang":"swift","time":"3 months, 1 week","timestamp":1648495974,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/669175915/","is_pending":"Not Pending","title":"Longest Palindrome","memory":"14.3 MB","code":"class Solution {\n    func longestPalindrome(_ s: String) -> Int {\n        var hashMap: [Character : Int] = [:]\n\n        for char in s {\n            let hashMapValue = hashMap[char] ?? 0\n            hashMap[char] = hashMapValue + 1\n        }\n\n        var output = 0\n        var isOddValueFound = false\n\n        for (_, value) in hashMap {\n            if isOddValueFound == false && value % 2 != 0 { isOddValueFound = true }\n            \n            output += (value / 2) * 2\n        }\n        \n        if isOddValueFound { output += 1 }\n\n        return output\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindrome"}