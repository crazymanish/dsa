{"id":679803813,"lang":"swift","time":"2 months, 3 weeks","timestamp":1649880131,"status_display":"Accepted","runtime":"1323 ms","url":"/submissions/detail/679803813/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"15.2 MB","code":"class Solution {\n    func longestPalindrome(_ s: String) -> String {\n        guard s.count > 1 else { return s }\n\n        let sArray = Array(s)\n        let sCount = s.count\n\n        var dpCache = Array(repeating: Array(repeating: false, count: sCount), count: sCount)\n\n        var maxPalindromeLength = 0\n        var output = String(sArray[0])\n        \n        for j in 1..<sCount {\n            for i in 0..<j {\n                let currentWordLength = j - i\n                \n                // 1. If sArray[i] == sArray[j] and the length of the word is 2 or less then its a palindrome\n                // 2. If sArray[i] == sArray[j] and the inner word is a palindrome then s[i...j] is a palindrome\n                if sArray[i] == sArray[j] && (currentWordLength <= 2 || dpCache[i + 1][j - 1]) {\n                    dpCache[i][j] = true\n                    if currentWordLength > maxPalindromeLength {\n                        maxPalindromeLength = currentWordLength\n                        output = String(sArray[i...j])\n                    }\n                }\n            }\n        }\n\n        return output\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}