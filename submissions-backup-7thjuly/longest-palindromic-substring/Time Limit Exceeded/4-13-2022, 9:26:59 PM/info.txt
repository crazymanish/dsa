{"id":679787903,"lang":"swift","time":"2 months, 3 weeks","timestamp":1649878019,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/679787903/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution {\n    func longestPalindrome(_ s: String) -> String {\n        var longestPalindrome = \"\"\n        let sArray = Array(s)\n        \n        for index in 0..<sArray.count {\n            let oddLengthPalindrome = findPalindrome(sArray, index, index) // ODD length\n            let evenLengthPalindrome = findPalindrome(sArray, index, index+1) // Even length\n            \n            if oddLengthPalindrome.count > longestPalindrome.count {\n                longestPalindrome = oddLengthPalindrome\n            }\n            \n            if evenLengthPalindrome.count > longestPalindrome.count {\n                longestPalindrome = evenLengthPalindrome\n            }\n        }\n        \n        return longestPalindrome\n    }\n    \n    private func findPalindrome(_ sArray: [Character], _ leftPointer: Int, _ rightPointer: Int) -> String {\n        var leftPointer = leftPointer\n        var rightPointer = rightPointer\n            \n        var currentPalindrome = \"\"\n        while leftPointer >= 0 && rightPointer < sArray.count && sArray[leftPointer] == sArray[rightPointer] {\n            currentPalindrome = String(sArray[leftPointer...rightPointer])\n            \n            leftPointer -= 1\n            rightPointer += 1\n        }\n        \n        return currentPalindrome\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-palindromic-substring"}