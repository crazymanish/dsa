{"id":718001720,"lang":"swift","time":"4Â weeks","timestamp":1654767205,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/718001720/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init(_ val: Int) {\n *         self.val = val\n *         self.left = nil\n *         self.right = nil\n *     }\n * }\n */\n\nclass Solution {\n    func lowestCommonAncestor(_ root: TreeNode?, _ p: TreeNode?, _ q: TreeNode?) -> TreeNode? {\n        guard let root = root, let p = p, let q = q else { return nil }\n\n        return findLowestLCA(root, p.val, q.val)\n    }\n\n    private func findLowestLCA(_ root: TreeNode?, _ p: Int, _ q: Int) -> TreeNode? {\n        guard let currentNode = root else { return nil }\n\n        if currentNode.val == p || currentNode.val == q { return currentNode }\n\n        let leftLowestLCA = findLowestLCA(currentNode.left, p, q)\n        let rightLowestLCA = findLowestLCA(currentNode.right, p, q)\n\n        if leftLowestLCA != nil && rightLowestLCA != nil { return currentNode }\n        if leftLowestLCA != nil { return leftLowestLCA }\n        if rightLowestLCA != nil { return rightLowestLCA }\n\n        return nil\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}