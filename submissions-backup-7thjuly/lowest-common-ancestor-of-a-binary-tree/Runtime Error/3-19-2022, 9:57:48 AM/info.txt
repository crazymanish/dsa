{"id":662890877,"lang":"swift","time":"3 months, 2 weeks","timestamp":1647680268,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/662890877/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init(_ val: Int) {\n *         self.val = val\n *         self.left = nil\n *         self.right = nil\n *     }\n * }\n */\n\nclass Solution {\n    func lowestCommonAncestor(_ root: TreeNode?, _ p: TreeNode?, _ q: TreeNode?) -> TreeNode? {\n        guard let root = root, let p = p, let q = q else { return nil }\n\n        return findLowestLCA(root, p.val, q.val)\n    }\n\n    private func findLowestLCA(_ root: TreeNode?, _ p: Int, _ q: Int) -> TreeNode? {\n        guard let currentNode = root else { return nil }\n\n        if currentNode.val == p || currentNode.val == q { return currentNode }\n\n        let leftLowestLCA = findLowestLCA(currentNode.left, p, q)\n        let rightLowestLCA = findLowestLCA(currentNode.right, p, q)\n\n        if leftLowestLCA != nil && rightLowestLCA != nil { return currentNode }\n\n        return nil\n    }\n}","compare_result":"1000000000000000000000000000000","title_slug":"lowest-common-ancestor-of-a-binary-tree"}