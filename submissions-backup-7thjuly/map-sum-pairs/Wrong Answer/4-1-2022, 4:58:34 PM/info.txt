{"id":671663038,"lang":"swift","time":"3 months, 1 week","timestamp":1648825114,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/671663038/","is_pending":"Not Pending","title":"Map Sum Pairs","memory":"N/A","code":"class MapSum {\n    var hashMap: [String : Int] = [:]\n    \n    init() {}\n    \n    func insert(_ key: String, _ val: Int) {\n        let hashMapKey = find(key) ?? key\n        var hashMapValue = hashMap[hashMapKey] ?? 0\n        hashMapValue += val\n        \n        hashMap[hashMapKey] = hashMapValue\n    }\n    \n    func sum(_ prefix: String) -> Int {\n        if let hashMapKey = find(prefix) {\n            return hashMap[hashMapKey]!\n        }\n        \n        return 0\n    }\n    \n    private func find(_ key: String) -> String? {\n        if hashMap[key] != nil { return key }\n        \n        let hashMapKeys = Array(hashMap.keys)\n        \n        for hashMapKey in hashMapKeys {\n            var prefix = \"\"\n            for char in hashMapKey {\n                prefix += String(char)\n                \n                if prefix == key { return hashMapKey }\n            }\n        }\n        \n        return nil\n    }\n}\n\n/**\n * Your MapSum object will be instantiated and called as such:\n * let obj = MapSum()\n * obj.insert(key, val)\n * let ret_2: Int = obj.sum(prefix)\n */","compare_result":"11100000100000000000000000000000000","title_slug":"map-sum-pairs"}