{"id":680469415,"lang":"swift","time":"2 months, 3 weeks","timestamp":1649970150,"status_display":"Accepted","runtime":"463 ms","url":"/submissions/detail/680469415/","is_pending":"Not Pending","title":"Maximal Square","memory":"16.9 MB","code":"class Solution {\n    // This solution is based on previous/below question\n    // 1277. Count Square Submatrices with All Ones\n    // https://leetcode.com/problems/count-square-submatrices-with-all-ones/\n    func maximalSquare(_ matrix: [[Character]]) -> Int {\n        var mutableMatrix = matrix.map { $0.map { String($0) } }\n        let rowsCount = mutableMatrix.count\n        let columnsCount = mutableMatrix[0].count\n        \n        var maximalSquareCount = 0\n        \n        // check in Last Row, if we have 1 or not\n        let lastRow = rowsCount-1\n        for column in 0..<columnsCount {\n            if mutableMatrix[lastRow][column] == \"1\" {\n                maximalSquareCount = 1\n                break\n            }\n        }\n        \n        // check in Last Column, if we have 1 or not (only if we did not found in last row)\n        let lastColumn = columnsCount-1\n        if maximalSquareCount == 0 {\n            for row in 0..<rowsCount-1 {\n                if mutableMatrix[row][lastColumn] == \"1\" {\n                    maximalSquareCount = 1\n                    break\n                }\n            }\n        }\n        \n        // check the rest row, column for maximum square...\n        for row in (0..<lastRow).reversed() {\n            for column in (0..<lastColumn).reversed() {\n                if mutableMatrix[row][column] == \"1\" {\n                    let rightValue = mutableMatrix[row][column+1]\n                    let downValue = mutableMatrix[row+1][column]\n                    let diagnalValue = mutableMatrix[row+1][column+1]\n                    \n                    let minimumValue = min(min(Int(rightValue)!, Int(downValue)!), Int(diagnalValue)!)\n\n                    let squareValue = 1 + minimumValue\n                    mutableMatrix[row][column] = String(squareValue)\n                    \n                    maximalSquareCount = max(maximalSquareCount, squareValue)\n                }\n            }\n        }\n        \n        return maximalSquareCount*maximalSquareCount\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square"}