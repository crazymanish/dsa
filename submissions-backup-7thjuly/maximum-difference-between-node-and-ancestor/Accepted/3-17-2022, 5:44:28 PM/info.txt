{"id":661917784,"lang":"swift","time":"3 months, 3 weeks","timestamp":1647535468,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/661917784/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"15.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    private var maxAncestorDifference = Int.min\n\n    func maxAncestorDiff(_ root: TreeNode?) -> Int {\n        guard let root = root else { return 0 }\n\n        findMaxAncestorDiff(root, root.val, root.val)\n\n        return maxAncestorDifference\n    }\n\n    private func findMaxAncestorDiff(_ root: TreeNode?, _ currentPathMinValueNode: Int, _ currentPathMaxValueNode: Int) {\n        guard let currentNode = root else { return }\n\n        let newMinValueNode = min(abs(currentNode.val), abs(currentPathMinValueNode))\n        let newMaxValueNode = max(abs(currentNode.val), abs(currentPathMaxValueNode))\n\n        if currentNode.isLeafNode {\n            let currentPathAncestorDifference = abs(newMaxValueNode - newMinValueNode)\n            maxAncestorDifference = max(currentPathAncestorDifference, maxAncestorDifference)\n        }\n\n        findMaxAncestorDiff(currentNode.left, newMinValueNode, newMaxValueNode)\n        findMaxAncestorDiff(currentNode.right, newMinValueNode, newMaxValueNode)\n    }\n}\n\nprivate extension TreeNode {\n    var isLeafNode: Bool { left == nil && right == nil }\n}","compare_result":"1111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor"}