{"id":691842466,"lang":"swift","time":"2Â months","timestamp":1651524056,"status_display":"Accepted","runtime":"202 ms","url":"/submissions/detail/691842466/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"21.5 MB","code":"class Solution {\n    // Ditto question: Longest common substring\n    func findLength(_ nums1: [Int], _ nums2: [Int]) -> Int {\n        let rows = nums1\n        let columns = nums2\n        \n        let rowsCount = rows.count\n        let columnsCount = columns.count\n        \n        var dpMatrix = Array(repeating: Array(repeating: 0, count: columnsCount+1), count: rowsCount+1)\n        var output = 0\n        \n        for rowIndex in 1...rowsCount {\n            let currentRowValue = rows[rowIndex-1]\n            for columnIndex in 1...columnsCount {\n                let currentColumnValue = columns[columnIndex-1]\n                \n                if currentRowValue == currentColumnValue {\n                    let previousLength = dpMatrix[rowIndex-1][columnIndex-1]\n                    let newLength = 1 + previousLength\n                    dpMatrix[rowIndex][columnIndex] = newLength\n                    \n                    output = max(output, newLength)\n                }\n            }\n        }\n        \n        return output\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray"}