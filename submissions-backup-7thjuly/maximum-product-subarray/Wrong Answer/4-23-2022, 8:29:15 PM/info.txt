{"id":686121372,"lang":"swift","time":"2 months, 2 weeks","timestamp":1650738555,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/686121372/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution {\n    func maxProduct(_ nums: [Int]) -> Int {\n        var maxProduct = nums[0]\n        \n        var currentProduct = 0\n        for currentNumber in nums {\n            if currentNumber < 0 { // Reset if negative\n                currentProduct = 0\n                maxProduct = max(maxProduct, currentProduct)\n                continue\n            } else if currentProduct == 0 {\n                currentProduct = 1\n            }\n            \n            currentProduct *= currentNumber\n            maxProduct = max(maxProduct, currentProduct)\n        }\n        \n        return maxProduct\n    }\n}","compare_result":"11011000111010001101000000010100111100110101011110000101001011101010011011111111101000101010110100010110100010010011100010001000111000011010000100101000110011100101100010010001000000000001","title_slug":"maximum-product-subarray"}