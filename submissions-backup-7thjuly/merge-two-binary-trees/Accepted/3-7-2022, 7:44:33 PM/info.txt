{"id":655337239,"lang":"swift","time":"4Â months","timestamp":1646678673,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/655337239/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"14.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func mergeTrees(_ root1: TreeNode?, _ root2: TreeNode?) -> TreeNode? {\n        if root1 == nil && root2 == nil { return nil }\n\n        if root1 == nil { return root2 }\n        if root2 == nil { return root1 }\n\n\n        let leftMerge = mergeTrees(root1?.left, root2?.left)\n        let rightMerge = mergeTrees(root1?.right, root2?.right)\n\n        return TreeNode(root1!.val + root2!.val, leftMerge, rightMerge)\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}