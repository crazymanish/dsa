{"id":725041398,"lang":"swift","time":"2Â weeks, 5Â days","timestamp":1655545943,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/725041398/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"13.8 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init() { self.val = 0; self.next = nil; }\n *     public init(_ val: Int) { self.val = val; self.next = nil; }\n *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }\n * }\n */\nclass Solution {\n    func mergeTwoLists(_ list1: ListNode?, _ list2: ListNode?) -> ListNode? {\n        if list1 == nil && list2 == nil { return nil }\n        if list1 == nil { return list2 }\n        if list2 == nil { return list1 }\n        \n        guard let list1Node = list1, let list2Node = list2 else { return nil }\n        \n        if list1Node.val < list2Node.val {\n            return ListNode(list1Node.val, mergeTwoLists(list1Node.next, list2Node))\n        } else {\n            return ListNode(list2Node.val, mergeTwoLists(list1Node, list2Node.next))\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}