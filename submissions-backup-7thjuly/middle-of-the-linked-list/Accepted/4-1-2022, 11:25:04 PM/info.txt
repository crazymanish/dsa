{"id":671848268,"lang":"swift","time":"3Â months","timestamp":1648848304,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/671848268/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"14.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init() { self.val = 0; self.next = nil; }\n *     public init(_ val: Int) { self.val = val; self.next = nil; }\n *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }\n * }\n */\nclass Solution {\n    func middleNode(_ head: ListNode?) -> ListNode? {\n        if head == nil { return nil }\n        \n        var slowPointer = head\n        var fastPointer = head\n        \n        while fastPointer?.next != nil {\n            slowPointer = slowPointer?.next\n            fastPointer = fastPointer?.next?.next\n        }\n        \n        return slowPointer\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list"}