{"id":704636326,"lang":"swift","time":"1 month, 2 weeks","timestamp":1653205090,"status_display":"Accepted","runtime":"103 ms","url":"/submissions/detail/704636326/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"14.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    private var minimumDifference = Int.max\n    private var previousNode: TreeNode? = nil\n    \n    func getMinimumDifference(_ root: TreeNode?) -> Int {\n        findMinimumDifference(root)\n        \n        return minimumDifference\n    }\n    \n    private func findMinimumDifference(_ currentNode: TreeNode?) {\n        guard let currentNode = currentNode else { return }\n        \n        findMinimumDifference(currentNode.left)\n        \n        if previousNode != nil {\n            let currentDifference = abs(previousNode!.val - currentNode.val)\n            minimumDifference = min(minimumDifference, currentDifference)\n        }\n        \n        previousNode = currentNode\n        \n        findMinimumDifference(currentNode.right)\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-absolute-difference-in-bst"}