{"id":692172970,"lang":"swift","time":"2Â months","timestamp":1651565698,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/692172970/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"14.1 MB","code":"class Solution {\n    func mincostTickets(_ days: [Int], _ costs: [Int]) -> Int {\n        let daysCount = days.count\n        var dpCache = Array(repeating: -1, count: daysCount)\n        \n        func findMinCostUsingDFSForDayIndex(_ index: Int) -> Int {\n            if index >= daysCount { return 0 }\n            \n            if dpCache[index] != -1 { return dpCache[index] }\n            \n            // We have 3 choices\n            // 1 day pass - costs[0]\n            // 7 days pass - costs[1]\n            // 30 days pass - costs[3]\n            \n            let Day1PassAnswer = costs[0] + findMinCostUsingDFSForDayIndex(index+1)\n            \n            var newIndex = index\n            while newIndex < daysCount && days[newIndex] < days[index]+7 {\n                newIndex += 1\n            }\n            let Day7PassAnswer = costs[1] + findMinCostUsingDFSForDayIndex(newIndex)\n            \n            newIndex = index\n            while newIndex < daysCount && days[newIndex] < days[index]+30 {\n                newIndex += 1\n            }\n            let Day30PassAnswer = costs[2] + findMinCostUsingDFSForDayIndex(newIndex)\n            \n            var minimumCost = min(Day1PassAnswer, Day7PassAnswer)\n            minimumCost = min(minimumCost, Day30PassAnswer)\n            \n            dpCache[index] = minimumCost\n            return minimumCost\n        }\n        \n        return findMinCostUsingDFSForDayIndex(0)\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets"}