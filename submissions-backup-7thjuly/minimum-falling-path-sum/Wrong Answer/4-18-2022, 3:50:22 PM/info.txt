{"id":682810016,"lang":"swift","time":"2 months, 2 weeks","timestamp":1650289822,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/682810016/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"N/A","code":"class Solution {\n    func minFallingPathSum(_ matrix: [[Int]]) -> Int {\n        var mutableMatrix = matrix\n        let rowsCount = mutableMatrix.count\n        let columnsCount = mutableMatrix[0].count\n        \n        var minFallingPathSum = Int.max\n        \n        // Update matrix with minimum failing path\n        // Skip first row because that will always hold minimum value in matrix\n        for row in 1..<rowsCount {\n            for column in 0..<columnsCount {\n                var minimumValue = Int.max\n                \n                let downValue = mutableMatrix[row-1][column]\n                minimumValue = min(minimumValue, downValue)\n                \n                if column > 0 {\n                    let diagnalLeftValue = mutableMatrix[row-1][column-1]\n                    minimumValue = min(minimumValue, diagnalLeftValue)\n                }\n                \n                if column < columnsCount-1 {\n                    let diagnalRightValue = mutableMatrix[row-1][column+1]\n                    minimumValue = min(minimumValue, diagnalRightValue)\n                }\n                \n                mutableMatrix[row][column] += minimumValue\n                \n                if row == rowsCount-1 { // minimum value in last row will hold the answer\n                    minFallingPathSum = min(minFallingPathSum, mutableMatrix[row][column])\n                }\n            }\n        }\n        \n        return minFallingPathSum\n    }\n}","compare_result":"1100000111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum"}