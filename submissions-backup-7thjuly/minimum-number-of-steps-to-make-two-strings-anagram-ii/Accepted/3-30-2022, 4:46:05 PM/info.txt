{"id":670394412,"lang":"swift","time":"3 months, 1 week","timestamp":1648651565,"status_display":"Accepted","runtime":"819 ms","url":"/submissions/detail/670394412/","is_pending":"Not Pending","title":"Minimum Number of Steps to Make Two Strings Anagram II","memory":"15.2 MB","code":"class Solution {\n    func minSteps(_ s: String, _ t: String) -> Int {\n        let hashMapS = hashMap(s)\n        let hashMapT = hashMap(t)\n        \n        var output = 0\n        for (key, valueS) in hashMapS {\n            let valueT = hashMapT[key] ?? 0\n            let minStepsRequired = max(valueS - valueT, 0)\n            \n            output += minStepsRequired\n        }\n        \n        for (key, valueT) in hashMapT {\n            let valueS = hashMapS[key] ?? 0\n            let minStepsRequired = max(valueT - valueS, 0)\n            \n            output += minStepsRequired\n        }\n        \n        return output\n    }\n\n    private func hashMap(_ string: String) -> [Character : Int] {\n        typealias Frequency = Int\n        var hashMap: [Character : Frequency] = [:]\n\n        for char in string {\n            let hashMapValue = hashMap[char] ?? 0\n            hashMap[char] = hashMapValue + 1\n        }\n\n        return hashMap\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-steps-to-make-two-strings-anagram-ii"}