{"id":693216469,"lang":"swift","time":"2Â months","timestamp":1651692971,"status_display":"Accepted","runtime":"2711 ms","url":"/submissions/detail/693216469/","is_pending":"Not Pending","title":"Minimum Number of Vertices to Reach All Nodes","memory":"24.8 MB","code":"class Solution {\n    func findSmallestSetOfVertices(_ n: Int, _ edges: [[Int]]) -> [Int] {\n        //Idea: We only have to count the number of nodes with zero incoming edges.\n        \n        var sourceNodes: Set<Int> = []\n        var destinationNodes: Set<Int> = []\n        \n        for edge in edges {\n            let sourceNode = edge[0]\n            let destinationNode = edge[1]\n            \n            destinationNodes.insert(destinationNode)\n            \n            if sourceNodes.contains(destinationNode) {\n                sourceNodes.remove(destinationNode)\n            }\n            \n            if destinationNodes.contains(sourceNode) == false {\n                sourceNodes.insert(sourceNode)\n            }\n        }\n        \n        return Array(sourceNodes)\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-vertices-to-reach-all-nodes"}