{"id":692172748,"lang":"swift","time":"2Â months","timestamp":1651565667,"status_display":"Accepted","runtime":"54 ms","url":"/submissions/detail/692172748/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"14.6 MB","code":"class Solution {\n    func minPathSum(_ grid: [[Int]]) -> Int {\n        var matrix = grid\n        let rows = matrix.count\n        let columns = matrix[0].count\n        \n        for row in (0..<rows).reversed() {\n            for column in (0..<columns).reversed() {\n                let isLastRow = row == rows-1\n                let isLastColumn = column == columns-1\n                \n                if isLastRow && isLastColumn { continue }\n                \n                let downValue = isLastRow ? Int.max : matrix[row+1][column]\n                let rightValue = isLastColumn ? Int.max : matrix[row][column+1]\n                \n                matrix[row][column] += min(downValue, rightValue)\n            }    \n        }\n        \n        return matrix[0][0]\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum"}