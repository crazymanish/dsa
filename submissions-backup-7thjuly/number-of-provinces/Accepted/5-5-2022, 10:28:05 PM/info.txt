{"id":693890812,"lang":"swift","time":"2Â months","timestamp":1651782485,"status_display":"Accepted","runtime":"184 ms","url":"/submissions/detail/693890812/","is_pending":"Not Pending","title":"Number of Provinces","memory":"14 MB","code":"class Solution {\n    func findCircleNum(_ isConnected: [[Int]]) -> Int {\n        let citiesCount = isConnected.count\n        var visitedCities = Array(repeating: false, count: citiesCount)\n        var numberOfProvinces = 0\n        \n        func visitCityUsingDFS(_ startingCityIndex: Int) {\n            visitedCities[startingCityIndex] = true\n            \n            for currentCityIndex in 0..<citiesCount {\n                if startingCityIndex == currentCityIndex { continue }\n                \n                let isBothCitiesConnected = isConnected[startingCityIndex][currentCityIndex] == 1\n                if isBothCitiesConnected && visitedCities[currentCityIndex] == false {\n                    visitCityUsingDFS(currentCityIndex)\n                }\n            }\n        }\n        \n        for startingCityIndex in 0..<citiesCount {\n            if visitedCities[startingCityIndex] == false {\n                visitCityUsingDFS(startingCityIndex)\n                numberOfProvinces += 1\n            }\n        }\n        \n        return numberOfProvinces\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces"}