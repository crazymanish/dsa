{"id":663707850,"lang":"swift","time":"3 months, 2 weeks","timestamp":1647781675,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/663707850/","is_pending":"Not Pending","title":"Number of Substrings Containing All Three Characters","memory":"N/A","code":"class Solution {\n    private var slidingWindow: SlidingWindow<String>!\n    private var numberOfSubstrings = 0\n    private var slidingWindowFirstValue: String { String(slidingWindow.startIndexValue) }\n    private var slidingWindowLastValue: String { String(slidingWindow.endIndexValue) }\n\n    private var hashMap: [String : Int] = [:]\n    private var hashMapCounter: Int {\n        var counter = 0\n\n        if hashMap[\"a\"] != nil { counter += 1 }\n        if hashMap[\"b\"] != nil { counter += 1 }\n        if hashMap[\"c\"] != nil { counter += 1 }\n\n        return counter\n    }\n\n    func numberOfSubstrings(_ s: String) -> Int {\n        slidingWindow = SlidingWindow(s)\n        let inputStringCount = s.count\n\n        while slidingWindow.endIndex < inputStringCount {\n            addIntoHashMap(slidingWindowLastValue)\n\n            // YaY: Found the Substring with a, b, c!\n            if hashMapCounter == 3 { numberOfSubstrings += 1 }\n\n            // We reached till the end for searching all the sub-string\n            if slidingWindow.endIndex == (inputStringCount - 1) {\n                // Reset HashMap\n                hashMap = [:]\n\n                // Move sliding window by 1 from start &\n                // reset the endIndex to same as startIndex to start search more sub-strings\n                slidingWindow.startIndex += 1\n                slidingWindow.endIndex = slidingWindow.startIndex - 1\n            }\n\n            slidingWindow.endIndex += 1\n        }\n\n        return numberOfSubstrings\n    }\n\n    private func addIntoHashMap(_ value: String) {\n        if let cacheValue = hashMap[value] {\n            hashMap[value] = cacheValue + 1\n        } else {\n            hashMap[value] = 1\n        }\n    }\n\n    private func removeFromHashMap(_ value: String) {\n        if let cacheValue = hashMap[value] {\n            hashMap[value] = cacheValue - 1\n\n            if hashMap[value]! == 0 { hashMap.removeValue(forKey: value) }\n        }\n    }\n}\n\nclass SlidingWindow<T: Collection> {\n    let collection: T\n\n    var startIndex: Int\n    var endIndex: Int\n\n    var value: T.SubSequence { value(at: startIndex, endIndex: endIndex) }\n    var startIndexValue: T.SubSequence { value(at: startIndex) }\n    var endIndexValue: T.SubSequence { value(at: endIndex) }\n\n    init(_ collection: T, _ startIndex: Int = 0, _ endIndex: Int = 0) {\n        self.collection = collection\n        self.startIndex = startIndex\n        self.endIndex = endIndex\n    }\n\n    private func value(at index: Int) -> T.SubSequence { value(at: index, endIndex: index) }\n\n    private func value(at startIndex: Int, endIndex: Int) -> T.SubSequence {\n        let start = collection.index(collection.startIndex, offsetBy: startIndex)\n        let end = collection.index(collection.startIndex, offsetBy: endIndex)\n\n        return collection[start...end]\n    }\n}","compare_result":"111111111111111111111110000000000000000000000000000000","title_slug":"number-of-substrings-containing-all-three-characters"}