{"id":679813439,"lang":"swift","time":"2 months, 3 weeks","timestamp":1649881488,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/679813439/","is_pending":"Not Pending","title":"Palindromic Substrings","memory":"15.2 MB","code":"class Solution {\n    func countSubstrings(_ s: String) -> Int {\n        let sCount = s.count\n\n        guard sCount > 1 else { return 1 }\n\n        let sArray = Array(s)\n\n        var dpCache = Array(repeating: Array(repeating: false, count: sCount), count: sCount)\n        var output = 0\n\n        for j in 1..<sCount {\n            for i in 0..<j {\n                let currentWordLength = j - i\n\n                // If sArray[i] == sArray[j] and the length of the word is 2 or less then its a palindrome\n                // If sArray[i] == sArray[j] and the inner word is a palindrome then sArray[i...j] is a palindrome\n                // Using Cache to find the inner word is a palindrome or not\n                if sArray[i] == sArray[j] && (currentWordLength <= 2 || dpCache[i + 1][j - 1]) {\n                    dpCache[i][j] = true\n                    output += 1\n                }\n            }\n        }\n\n        return output + sCount\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindromic-substrings"}