{"id":676880621,"lang":"swift","time":"2 months, 4 weeks","timestamp":1649498437,"status_display":"Accepted","runtime":"508 ms","url":"/submissions/detail/676880621/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"22.8 MB","code":"class Solution {\n    var dpMemorizationCache: [Int : [Int : Bool]] = [:]\n\n    func canPartition(_ nums: [Int]) -> Bool {\n        var sum = 0\n        for num in nums { sum += num }\n\n        if sum % 2 != 0 { return false } // ODD sum (i.e 11) never Partition\n\n        // Let's assume total sum was = 22 then we need to find a subset with equal 11\n        // because rest remaining array elements sum will be left 11 automatically.\n        return canPartition(nums, sum/2, nums.count-1)\n    }\n\n    // Knapsack problem variation - Dynamic Programming\n    private func canPartition(_ nums: [Int], _ sum: Int, _ currentIndex: Int) -> Bool {\n        if sum == 0 { return true }\n        if currentIndex < 0 { return false }\n\n        let currentNumber = nums[currentIndex]\n\n        if currentNumber == sum { return true }\n\n        if dpMemorizationCache[sum]?[currentIndex] != nil {\n            return dpMemorizationCache[sum]![currentIndex]!\n        }\n\n        var result = false\n\n        if currentNumber < sum {\n            // We have two choices:\n            // Choice1: Consider current-number fit for Partition(subset), keep finding smaller sum in smaller array\n            // Choice2: Ingore current-number fit for Partition, keep finding subset in smaller array\n            result = canPartition(nums, sum-currentNumber, currentIndex-1) || canPartition(nums, sum, currentIndex-1)\n        } else {\n            // Only 1 choice:\n            // current-number does not fit for Partition, so keep finding subset in smaller array\n            result = canPartition(nums, sum, currentIndex-1)\n        }\n\n        var cacheSum = dpMemorizationCache[sum] ?? [:]\n        cacheSum[currentIndex] = result\n        dpMemorizationCache[sum] = cacheSum\n\n        return result\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}