{"id":660645915,"lang":"swift","time":"3 months, 3 weeks","timestamp":1647366669,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/660645915/","is_pending":"Not Pending","title":"Path Sum","memory":"14.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    private var pathSumMap: [Int: Bool] = [:]\n\n    func hasPathSum(_ root: TreeNode?, _ targetSum: Int) -> Bool {\n        findAllPaths(root, 0)\n\n        return pathSumMap[targetSum] != nil\n    }\n\n    private func findAllPaths(_ root: TreeNode?, _ currentSum: Int) {\n        guard let currentNode = root else { return }\n\n        let newSum = currentSum + currentNode.val\n\n        if currentNode.left == nil && currentNode.right == nil {\n            pathSumMap[newSum] = true\n        }\n\n        findAllPaths(currentNode.left, newSum)\n        findAllPaths(currentNode.right, newSum)\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum"}