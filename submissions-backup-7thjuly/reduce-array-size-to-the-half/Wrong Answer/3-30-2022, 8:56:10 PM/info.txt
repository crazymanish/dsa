{"id":670536756,"lang":"swift","time":"3 months, 1 week","timestamp":1648666570,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/670536756/","is_pending":"Not Pending","title":"Reduce Array Size to The Half","memory":"N/A","code":"class Solution {\n    func minSetSize(_ arr: [Int]) -> Int {\n        let arrayCount = arr.count\n        var hashMap: [Int : Int] = [:]\n        \n        for element in arr {\n            let hashMapValue = hashMap[element] ?? 0\n            hashMap[element] = hashMapValue + 1\n        }\n        \n        var modifiedArraySize = arrayCount\n        var maximumFrequencyElementCount = 0\n        \n        while (modifiedArraySize >= arrayCount / 2)  {\n            var maximumFrequency = Int.min\n            \n            for (_, value) in hashMap {\n                maximumFrequency = max(maximumFrequency, value)\n            }\n            \n            maximumFrequencyElementCount += 1\n            modifiedArraySize -= maximumFrequency\n        }\n        \n        return maximumFrequencyElementCount\n    }\n}","compare_result":"110000100000000000000000000000000","title_slug":"reduce-array-size-to-the-half"}