{"id":728575153,"lang":"swift","time":"2 weeks, 1 day","timestamp":1655913260,"status_display":"Accepted","runtime":"117 ms","url":"/submissions/detail/728575153/","is_pending":"Not Pending","title":"Reorder List","memory":"18.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init() { self.val = 0; self.next = nil; }\n *     public init(_ val: Int) { self.val = val; self.next = nil; }\n *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }\n * }\n */\nclass Solution {\n    func reorderList(_ head: ListNode?) {\n        if head == nil { return }\n        \n        var node = head \n        let stack = Stack()\n        stack.push(node!)\n        \n        while let next = node?.next {\n            stack.push(next)\n            node = next\n        }\n\n        node = head\n        while let next = node?.next, let endNode = stack.pop() {\n\n            node?.next = endNode\n            endNode.next = next\n\n            node = next\n\n            if node?.next === endNode {\n                node?.next = nil\n                break\n            }\n        }\n    }\n}\n\nclass Stack {\n    private var array: [ListNode] = []\n    \n    func push(_ element: ListNode) {\n        array.append(element)\n    }\n    \n    func pop() -> ListNode? {\n        if array.isEmpty { return nil }\n        \n        return array.removeLast()\n    }\n}","compare_result":"111111111111","title_slug":"reorder-list"}