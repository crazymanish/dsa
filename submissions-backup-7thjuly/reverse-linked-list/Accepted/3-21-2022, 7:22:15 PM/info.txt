{"id":664533749,"lang":"swift","time":"3Â months, 2Â weeks","timestamp":1647886935,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/664533749/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"14.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init() { self.val = 0; self.next = nil; }\n *     public init(_ val: Int) { self.val = val; self.next = nil; }\n *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }\n * }\n */\nclass Solution {\n    func reverseList(_ head: ListNode?) -> ListNode? {\n        return reverseList(head, nil)\n    }\n    \n    private func reverseList(_ current: ListNode?, _ previous: ListNode?) -> ListNode? {\n        if current == nil { return previous }\n        \n        var next = current?.next\n        current?.next = previous\n        \n        return reverseList(next, current)\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list"}