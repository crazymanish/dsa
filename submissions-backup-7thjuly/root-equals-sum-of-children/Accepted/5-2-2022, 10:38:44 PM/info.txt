{"id":691841465,"lang":"swift","time":"2Â months","timestamp":1651523924,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/691841465/","is_pending":"Not Pending","title":"Root Equals Sum of Children","memory":"14.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func checkTree(_ root: TreeNode?) -> Bool {\n        let rootValue = root?.val ?? 0\n        let leftChildValue = root?.left?.val ?? 0\n        let rightChildValue = root?.right?.val ?? 0\n        \n        return rootValue == leftChildValue+rightChildValue\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"root-equals-sum-of-children"}