{"id":673870194,"lang":"swift","time":"3Â months","timestamp":1649101559,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/673870194/","is_pending":"Not Pending","title":"Rotate List","memory":"13.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init() { self.val = 0; self.next = nil; }\n *     public init(_ val: Int) { self.val = val; self.next = nil; }\n *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }\n * }\n */\nclass Solution {\n    func rotateRight(_ head: ListNode?, _ k: Int) -> ListNode? {\n        guard head?.next != nil else { return head }\n\n        var currentNode = head\n        var nodesCount = 1\n\n        while currentNode?.next != nil {\n            currentNode = currentNode?.next\n            nodesCount += 1\n        }\n        currentNode?.next = head // append list to the end\n\n        var index = 0 \n        while index < (nodesCount - k % nodesCount) { \n            currentNode = currentNode?.next\n            index += 1\n        }\n\n        var newHead = currentNode?.next\n        currentNode?.next = nil\n\n        return newHead\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}