{"id":659728126,"lang":"swift","time":"3 months, 3 weeks","timestamp":1647249012,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/659728126/","is_pending":"Not Pending","title":"Same Tree","memory":"14.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func isSameTree(_ p: TreeNode?, _ q: TreeNode?) -> Bool {\n        if p == nil, q == nil { return true }\n        \n        guard let p = p, let q = q else { return false }\n        \n        if p.val != q.val { return false }\n        \n        let isLeftSameTree = isSameTree(p.left, q.left)\n        let isRightSameTree = isSameTree(p.right, q.right)\n        \n        return isLeftSameTree && isRightSameTree\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree"}