{"id":700962004,"lang":"swift","time":"1 month, 3 weeks","timestamp":1652735128,"status_display":"Accepted","runtime":"175 ms","url":"/submissions/detail/700962004/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"14.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func searchBST(_ root: TreeNode?, _ val: Int) -> TreeNode? {\n        if root == nil { return nil }\n        \n        if root!.val == val { return root }\n\n        if root!.val < val {\n            return searchBST(root?.right, val)\n        } else {\n            return searchBST(root?.left, val)\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree"}