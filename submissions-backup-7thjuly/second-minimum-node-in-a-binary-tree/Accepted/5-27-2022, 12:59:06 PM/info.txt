{"id":708273139,"lang":"swift","time":"1 month, 1 week","timestamp":1653649146,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/708273139/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"13.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    private var secondMinimumValue = Int.max\n\n    func findSecondMinimumValue(_ root: TreeNode?) -> Int {\n        guard let root = root else { return -1 }\n        \n        findMinimumValue(root.left, root.val)\n        findMinimumValue(root.right, root.val)\n\n        if secondMinimumValue == Int.max { return -1 } // No second minimum value found\n\n        return secondMinimumValue\n    }\n\n    private func findMinimumValue(_ root: TreeNode?, _ firstMinimumValue: Int) {\n        guard let currentNode = root else { return }\n\n        if currentNode.val > firstMinimumValue {\n            secondMinimumValue = min(secondMinimumValue, currentNode.val)   \n        }\n\n        findMinimumValue(currentNode.left, firstMinimumValue)\n        findMinimumValue(currentNode.right, firstMinimumValue)\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree"}