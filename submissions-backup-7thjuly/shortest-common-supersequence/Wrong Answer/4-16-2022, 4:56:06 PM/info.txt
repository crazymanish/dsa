{"id":681512889,"lang":"swift","time":"2 months, 3 weeks","timestamp":1650120966,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/681512889/","is_pending":"Not Pending","title":"Shortest Common Supersequence ","memory":"N/A","code":"class Solution {\n    func shortestCommonSupersequence(_ str1: String, _ str2: String) -> String {\n        // Step1: Calculate the LCS...\n        let dpMatrix = longestCommonSubsequence(str1, str2)\n\n        // Step2: Perform \"(str1 + str2 - lcs) operation\" & tricky part is we need to maintain order\n        let output = combine(str1, str2, dpMatrix)\n\n        return String(output.reversed())\n    }\n\n    // Reusing code: 1143. Longest Common Subsequence\n    // https://leetcode.com/problems/longest-common-subsequence/\n    private func longestCommonSubsequence(_ text1: String, _ text2: String) -> [[Int]] {\n        let rows = Array(text1)\n        let columns = Array(text2)\n\n        let rowsCount = rows.count\n        let columnsCount = columns.count\n\n        var dpMatrix = Array(repeating: Array(repeating: 0, count: columnsCount+1), count: rowsCount+1)\n\n        for rowIndex in 1...rowsCount {\n            let currentRowChar = rows[rowIndex-1]\n            for columnIndex in 1...columnsCount {\n                let currentColumnChar = columns[columnIndex-1]\n\n                if currentRowChar == currentColumnChar {\n                    let previousLCS = dpMatrix[rowIndex-1][columnIndex-1]\n                    dpMatrix[rowIndex][columnIndex] = 1 + previousLCS\n                } else {\n                    let previousRowLCS = dpMatrix[rowIndex-1][columnIndex]\n                    let previousColumnLCS = dpMatrix[rowIndex][columnIndex-1]\n                    let previousLCS = max(previousRowLCS, previousColumnLCS)\n\n                    dpMatrix[rowIndex][columnIndex] = previousLCS\n                }\n            }\n        }\n\n        return dpMatrix\n    }\n\n    private func combine(_ str1: String, _ str2: String, _ dpMatrix: [[Int]]) -> String {\n        let str1Array = Array(str1)\n        let str2Array = Array(str2)\n        var str1LastIndex = str1Array.count\n        var str2LastIndex = str2Array.count\n\n        var output = \"\"\n\n        while str1LastIndex != 0 || str2LastIndex != 0 {\n            let char: Character\n\n            if str1LastIndex == 0 {\n                str2LastIndex -= 1\n                char = str2Array[str2LastIndex]\n            } else if str2LastIndex == 0 {\n                str1LastIndex -= 1\n                char = str1Array[str1LastIndex]\n            } else if str1Array[str1LastIndex-1] == str2Array[str2LastIndex-1] {\n                str1LastIndex -= 1\n                str2LastIndex -= 1\n                char = str1Array[str1LastIndex] // or str2Array[str2LastIndex] // Both char same\n            } else if dpMatrix[str1LastIndex-1][str2LastIndex] == dpMatrix[str1LastIndex][str2LastIndex] {\n                str1LastIndex -= 1\n                char = str1Array[str1LastIndex]\n            } else if dpMatrix[str1LastIndex][str2LastIndex-1] == dpMatrix[str1LastIndex][str2LastIndex] {\n                str2LastIndex -= 1\n                char = str2Array[str2LastIndex]\n            } else {\n                // noop: no more case\n                char = \"F\" // we are fucked, if we reach here...\n            }\n\n            output = String(char) + output\n        }\n\n        return output\n    }\n}\n","compare_result":"11001001001001001001001001000000000000000000000","title_slug":"shortest-common-supersequence"}