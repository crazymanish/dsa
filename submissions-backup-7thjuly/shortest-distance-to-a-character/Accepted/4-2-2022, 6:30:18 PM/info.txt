{"id":672350438,"lang":"swift","time":"3Â months","timestamp":1648917018,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/672350438/","is_pending":"Not Pending","title":"Shortest Distance to a Character","memory":"14.4 MB","code":"class Solution {\n    func shortestToChar(_ s: String, _ c: Character) -> [Int] {\n        let sArray = Array(s)\n        let sCount = sArray.count\n        \n        var leftPointer = 0\n        var rightPointer = sCount-1\n        var output: [Int] = []\n        \n        var lastClosestDistance = Int.max-sCount\n        \n        while leftPointer < sCount {\n            if sArray[leftPointer] == c { \n                lastClosestDistance = 0 \n            } else {\n                lastClosestDistance += 1\n            }\n            \n            output.append(lastClosestDistance)\n            \n            leftPointer += 1\n        }\n        \n        lastClosestDistance = Int.max-sCount\n        \n        while rightPointer >= 0 {\n            if sArray[rightPointer] == c { \n                lastClosestDistance = 0 \n            } else {\n                lastClosestDistance += 1\n            }\n            \n            lastClosestDistance = min(lastClosestDistance, output[rightPointer])\n            \n            output[rightPointer] = lastClosestDistance\n            \n            rightPointer -= 1\n        }\n        \n        return output\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-distance-to-a-character"}