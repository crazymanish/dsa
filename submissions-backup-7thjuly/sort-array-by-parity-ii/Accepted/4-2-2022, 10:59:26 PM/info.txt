{"id":672496237,"lang":"swift","time":"3Â months","timestamp":1648933166,"status_display":"Accepted","runtime":"243 ms","url":"/submissions/detail/672496237/","is_pending":"Not Pending","title":"Sort Array By Parity II","memory":"15.5 MB","code":"class Solution {\n    // Follow Up: Could you solve it in-place?\n    // Yes: done...see below\n    func sortArrayByParityII(_ nums: [Int]) -> [Int] {\n        let numsCount = nums.count\n        var mutableNums = nums\n        \n        var currentEvenIndex = 0\n        while currentEvenIndex < numsCount {\n            let currentEvenIndexValue = mutableNums[currentEvenIndex]\n            \n            // If Even-index value is odd...then search for next Odd-index Even-value \n            // and swap :wink:    \n            if currentEvenIndexValue.isOdd {\n                var currentOddIndex = 1\n                \n                while mutableNums[currentOddIndex].isOdd {\n                    currentOddIndex += 2 // next odd-index\n                }\n                \n                \n                // Swap ODD with EVEN \n                mutableNums[currentEvenIndex] = mutableNums[currentOddIndex]\n                mutableNums[currentOddIndex] = currentEvenIndexValue\n            }\n            \n            \n            currentEvenIndex += 2 // next even-index\n        }\n        \n        return mutableNums\n    }\n}\n\nextension Int {\n    var isEven: Bool { self % 2 == 0 }\n    var isOdd: Bool { !isEven }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-array-by-parity-ii"}