{"id":672363110,"lang":"swift","time":"3Â months","timestamp":1648918367,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/672363110/","is_pending":"Not Pending","title":"Sort Array By Parity","memory":"14.6 MB","code":"class Solution {\n    func sortArrayByParity(_ nums: [Int]) -> [Int] {\n        var mutableNums = nums\n        var leftPointer = 0\n        var rightPointer = nums.count-1\n        \n        while leftPointer < rightPointer {\n            let leftValue = mutableNums[leftPointer]\n            let rightValue = mutableNums[rightPointer]\n            \n            if leftValue.isEven {\n                leftPointer += 1\n            } else if rightValue.isOdd {\n                rightPointer -= 1\n            } else if leftValue.isOdd && rightValue.isEven {\n                // swap values\n                mutableNums[leftPointer] = rightValue\n                mutableNums[rightPointer] = leftValue\n                \n                leftPointer += 1\n                rightPointer -= 1\n            } else {\n                leftPointer += 1\n                rightPointer -= 1   \n            }\n        }\n        \n        return mutableNums\n    }\n}\n\nextension Int {\n    var isEven: Bool { self % 2 == 0 }\n    var isOdd: Bool { !isEven }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-array-by-parity"}