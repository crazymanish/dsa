{"id":691844470,"lang":"swift","time":"2Â months","timestamp":1651524317,"status_display":"Accepted","runtime":"186 ms","url":"/submissions/detail/691844470/","is_pending":"Not Pending","title":"Stone Game IV","memory":"22.7 MB","code":"class Solution {\n    func winnerSquareGame(_ n: Int) -> Bool {\n        func playStoneGame(_ n: Int) -> Bool {\n            if n < 1 { return false }\n            \n            if let cacheValue = dpCache[n] { return cacheValue }\n            \n            var canIWin = false\n            \n            var currentSquareNumber = 1 \n            while currentSquareNumber*currentSquareNumber <= n {\n                let squareValue = currentSquareNumber*currentSquareNumber\n                let canNextPlayerWin = playStoneGame(n-squareValue)\n                \n                if canNextPlayerWin == false { \n                    canIWin = true \n                    break\n                }\n                \n                currentSquareNumber += 1\n            }\n            \n            dpCache[n] = canIWin\n            return canIWin\n        }\n        \n        var dpCache: [Bool?] = Array(repeating: nil, count: n+1)\n        \n        return playStoneGame(n)\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"stone-game-iv"}