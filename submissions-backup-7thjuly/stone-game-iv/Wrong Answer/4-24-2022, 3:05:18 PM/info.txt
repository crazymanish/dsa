{"id":686608466,"lang":"swift","time":"2 months, 2 weeks","timestamp":1650805518,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/686608466/","is_pending":"Not Pending","title":"Stone Game IV","memory":"N/A","code":"class Solution {\n    func winnerSquareGame(_ n: Int) -> Bool {\n        func playStoneGame(_ n: Int) -> Int {\n            if n < 1 { return 0 }\n            \n            let cacheValue = dpCache[n]\n            if cacheValue != -1 { return cacheValue }\n            \n            let squareValue = findMaxPerfectSquareValueFor(n)\n            let answer = 1 + playStoneGame(n-squareValue)\n            \n            dpCache[n] = answer\n            return answer\n        }\n        \n        func findMaxPerfectSquareValueFor(_ n: Int) -> Int {\n            if n < 1 { return 0 }\n            \n            let cacheValue = perfectSquareDPCache[n]\n            if cacheValue != -1 { return cacheValue }\n            \n            var currentSquareNumber = 1 \n            while currentSquareNumber*currentSquareNumber < n {\n                currentSquareNumber += 1\n            }\n\n            var answer = currentSquareNumber*currentSquareNumber\n            if answer > n {\n                answer = (currentSquareNumber-1)*(currentSquareNumber-1)\n            }\n            \n            perfectSquareDPCache[n] = answer\n            return answer\n        }\n        \n        var dpCache = Array(repeating: -1, count: n+1)\n        var perfectSquareDPCache = Array(repeating: -1, count: n+1)\n        \n        let totalMoves = playStoneGame(n)\n        return totalMoves % 2 != 0 // Alice wins only if total moves are ODD\n    }\n}","compare_result":"111111101011000100101001111100111111011100011001101111111010101101100011","title_slug":"stone-game-iv"}