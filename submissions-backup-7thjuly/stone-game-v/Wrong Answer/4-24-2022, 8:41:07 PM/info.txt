{"id":686771297,"lang":"swift","time":"2 months, 2 weeks","timestamp":1650825667,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/686771297/","is_pending":"Not Pending","title":"Stone Game V","memory":"N/A","code":"class Solution {\n    func stoneGameV(_ stoneValue: [Int]) -> Int {\n        func playStoneGame(_ startIndex: Int, _ endIndex: Int, _ totalValue: Int) -> Int {\n            if endIndex == startIndex { return 0 }\n\n            var currentIndex = startIndex\n            var leftRowValue = stoneValue[currentIndex]\n            while currentIndex+1 < endIndex && leftRowValue + stoneValue[currentIndex+1] <= totalValue / 2  {\n                leftRowValue += stoneValue[currentIndex+1]\n                currentIndex += 1\n            }\n\n            let rightRowValue = totalValue-leftRowValue\n\n            if leftRowValue < rightRowValue {\n                return leftRowValue + playStoneGame(startIndex, currentIndex, leftRowValue)\n            } else if leftRowValue > rightRowValue {\n                return rightRowValue + playStoneGame(currentIndex+1, endIndex, rightRowValue)\n            } else {\n                let leftResult = leftRowValue + playStoneGame(startIndex, currentIndex, leftRowValue)\n                let rightResult = rightRowValue + playStoneGame(currentIndex+1, endIndex, rightRowValue)\n                return max(leftResult, rightResult)\n            }\n        }\n\n        var totalValue = 0\n        for value in stoneValue { totalValue += value }\n\n        return playStoneGame(0, stoneValue.count-1, totalValue)\n    }\n}\n","compare_result":"11111011111100001001010011110001100100001000000000001000100100000110001110100000000000000000000010000010000001001000100100101000001","title_slug":"stone-game-v"}