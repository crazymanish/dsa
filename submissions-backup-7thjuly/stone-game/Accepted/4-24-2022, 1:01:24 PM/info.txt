{"id":686562427,"lang":"swift","time":"2 months, 2 weeks","timestamp":1650798084,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/686562427/","is_pending":"Not Pending","title":"Stone Game","memory":"15.9 MB","code":"class Solution {\n    func stoneGame(_ piles: [Int]) -> Bool {\n        func playStoneGame(_ startIndex: Int, _ endIndex: Int) -> Int {\n            if startIndex > endIndex { return 0 }\n            \n            let cacheValue = dpCache[startIndex][endIndex]\n            if cacheValue != -1 { return cacheValue }\n            \n            // Let's assume that Alice will pick startIndex\n            let possibleAnswer1 = piles[startIndex] - playStoneGame(startIndex+1, endIndex)\n            \n            // Let's assume that Alice will pick endIndex\n            let possibleAnswer2 = piles[endIndex] - playStoneGame(startIndex, endIndex-1)\n            \n            let answer = max(possibleAnswer1, possibleAnswer2)\n            \n            dpCache[startIndex][endIndex] = answer\n            return answer\n        }\n        \n        let pilesCount = piles.count\n        var dpCache = Array(repeating: Array(repeating: -1, count: pilesCount+1), count: pilesCount+1)\n        \n        let diffOfAliceAndBobStones = playStoneGame(0, (pilesCount-1))\n        return diffOfAliceAndBobStones > 0\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"stone-game"}