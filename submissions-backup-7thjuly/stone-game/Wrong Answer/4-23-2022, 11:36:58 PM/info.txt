{"id":686205629,"lang":"swift","time":"2 months, 2 weeks","timestamp":1650749818,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/686205629/","is_pending":"Not Pending","title":"Stone Game","memory":"N/A","code":"class Solution {\n    func stoneGame(_ piles: [Int]) -> Bool {\n        var aliceStonesSum = 0\n        var bobStonesSum = 0\n        \n        func playStoneGame(_ startIndex: Int, _ endIndex: Int, _ isAlice: Bool) {\n            if startIndex > endIndex { return }\n            \n            if piles[startIndex] > piles[endIndex] {\n                updateSum(startIndex, isAlice)\n                playStoneGame(startIndex+1, endIndex, !isAlice)\n            } else {\n                updateSum(endIndex, isAlice)\n                playStoneGame(startIndex, endIndex-1, !isAlice)\n            }\n        }\n        \n        func updateSum(_ index: Int, _ isAlice: Bool) {\n            if isAlice {\n                aliceStonesSum += piles[index]\n            } else {\n                bobStonesSum += piles[index]\n            }\n        }\n        \n        playStoneGame(0, (piles.count-1), true)\n        return aliceStonesSum > bobStonesSum\n    }\n}","compare_result":"1111011110111110101011111110011110110111010011","title_slug":"stone-game"}