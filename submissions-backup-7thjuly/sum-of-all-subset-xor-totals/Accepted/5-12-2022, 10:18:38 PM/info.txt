{"id":698296711,"lang":"swift","time":"1 month, 3 weeks","timestamp":1652386718,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/698296711/","is_pending":"Not Pending","title":"Sum of All Subset XOR Totals","memory":"14.1 MB","code":"class Solution {\n    func subsetXORSum(_ nums: [Int]) -> Int {\n        let lastIndex = nums.count-1\n        var outputSum = 0\n        var currentSubset: [Int] = []\n        \n        func findAllSubSets(_ currentIndex: Int) {\n            if currentIndex > lastIndex { \n                outputSum += currentSubset.xorValue\n                return \n            }\n            \n            let currentIndexValue = nums[currentIndex]\n            // We always have two choices:\n            // Choice1: don't aad this value into currentSubset\n            // Choice2: add this value intocurrentSubset\n            \n            // Choice1: don't aad this value into currentSubset\n            findAllSubSets(currentIndex+1)\n            \n            // Choice2:add this value into currentSubset\n            currentSubset += [currentIndexValue]\n            findAllSubSets(currentIndex+1)\n            currentSubset.removeLast() // backtracking\n        }\n        \n        findAllSubSets(0)\n        \n        return outputSum\n    }\n}\n\nprivate extension Array where Element == Int {\n    var xorValue: Int {\n        var output = 0\n        \n        forEach { output ^= $0 }\n        \n        return output\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"sum-of-all-subset-xor-totals"}