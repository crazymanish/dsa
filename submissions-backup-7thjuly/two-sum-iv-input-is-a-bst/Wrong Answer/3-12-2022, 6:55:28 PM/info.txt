{"id":658551542,"lang":"swift","time":"3 months, 3 weeks","timestamp":1647107728,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/658551542/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func findTarget(_ root: TreeNode?, _ k: Int) -> Bool {\n        guard let root = root else { return false }\n        \n        let remainingTarget = k - root.val\n        \n        if remainingTarget < root.val {\n            return isElementExist(root.left, remainingTarget)\n        } else {\n            return isElementExist(root.right, remainingTarget)\n        }\n        \n        let findTargetInLeft = findTarget(root.left, k)\n        let findTargetInRight = findTarget(root.right, k)\n        \n        return findTargetInLeft || findTargetInRight\n    }\n    \n    private func isElementExist(_ root: TreeNode?, _ k: Int) -> Bool {\n        guard let root = root else { return false }\n        \n        if root.val == k { return true }\n        \n        let isElementExistInLeft = isElementExist(root.left, k)\n        let isElementExistInRight = isElementExist(root.right, k)\n        \n        return isElementExistInLeft || isElementExistInRight\n    }\n}","compare_result":"11011110001010111111001111011011100111001111010001000011111000001001111000010101000000000000000010000000000100000000000000000100100000010000000000000000000000000001111101100000000000000001000000000000000010000000001111111111111111011011111111111111111111111111111111111111111111111111111111111111111111111111011111111111101111111111111111111111111111111111111111111111111111111111100011011001111111111111111111001111011111","title_slug":"two-sum-iv-input-is-a-bst"}