{"id":657755242,"lang":"swift","time":"3 months, 4 weeks","timestamp":1646987937,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/657755242/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"14.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     public var val: Int\n *     public var left: TreeNode?\n *     public var right: TreeNode?\n *     public init() { self.val = 0; self.left = nil; self.right = nil; }\n *     public init(_ val: Int) { self.val = val; self.left = nil; self.right = nil; }\n *     public init(_ val: Int, _ left: TreeNode?, _ right: TreeNode?) {\n *         self.val = val\n *         self.left = left\n *         self.right = right\n *     }\n * }\n */\nclass Solution {\n    func isUnivalTree(_ root: TreeNode?) -> Bool {\n        guard let rootNode = root else { return true }\n        \n        if let left = rootNode.left, left.val != rootNode.val { return false }\n        if let right = rootNode.right, right.val != rootNode.val { return false }\n        \n        let isLeftUnivalTree = isUnivalTree(rootNode.left)\n        let isRightUnivalTree = isUnivalTree(rootNode.right)\n        \n        return isLeftUnivalTree && isRightUnivalTree\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}