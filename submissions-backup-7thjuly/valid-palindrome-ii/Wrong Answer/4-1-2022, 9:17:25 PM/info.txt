{"id":671796159,"lang":"swift","time":"3 months, 1 week","timestamp":1648840645,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/671796159/","is_pending":"Not Pending","title":"Valid Palindrome II","memory":"N/A","code":"class Solution {\n    func validPalindrome(_ s: String) -> Bool {\n        var hashMap: [Character : Int] = [:]\n        \n        for char in s {\n            let hashMapValue = hashMap[char] ?? 0\n            hashMap[char] = hashMapValue + 1\n        }\n        \n        var oddValueCount = 0\n\n        for (_, value) in hashMap {\n            if value % 2 != 0 { oddValueCount += 1 }\n        }\n        \n        return oddValueCount < 3\n    }\n}","compare_result":"11111111111111110011111111011111111011111110111111111111111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111111011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111110011111111111111001","title_slug":"valid-palindrome-ii"}