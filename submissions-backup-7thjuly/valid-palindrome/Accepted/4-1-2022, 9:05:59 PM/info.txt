{"id":671790547,"lang":"swift","time":"3 months, 1 week","timestamp":1648839959,"status_display":"Accepted","runtime":"87 ms","url":"/submissions/detail/671790547/","is_pending":"Not Pending","title":"Valid Palindrome","memory":"16.2 MB","code":"class Solution {\n    func isPalindrome(_ s: String) -> Bool {\n        var inputString = s.lowercased() \n        \n        let nonAlphanumericsCharacterSet = CharacterSet.alphanumerics.inverted\n        inputString = inputString\n            .components(separatedBy: nonAlphanumericsCharacterSet)\n            .joined(separator: \"\")\n     \n        return isPalindrome(Array(inputString))\n    }\n    \n   private func isPalindrome(_ array: [Character]) -> Bool {\n        var leftPointerIndex = 0\n        var rightPointerIndex = array.count - 1\n        \n        while leftPointerIndex <= rightPointerIndex {\n            let leftChar = array[leftPointerIndex]\n            let rightChar = array[rightPointerIndex]\n            \n            if leftChar != rightChar { return false }\n            \n            leftPointerIndex += 1\n            rightPointerIndex -= 1\n        }\n        \n        return true\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-palindrome"}