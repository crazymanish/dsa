{"id":677821780,"lang":"swift","time":"2Â months, 4Â weeks","timestamp":1649617622,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/677821780/","is_pending":"Not Pending","title":"Valid Parentheses","memory":"13.9 MB","code":"class Solution {\n    func isValid(_ s: String) -> Bool {\n        let stack = Stack()\n        \n        for char in s {\n            if char.isOpeningBracket {\n                stack.push(char)\n            } else {\n                if let openingBracket = stack.pop() {\n                    if char == \")\" && openingBracket != \"(\" { return false }\n                    if char == \"}\" && openingBracket != \"{\" { return false }\n                    if char == \"]\" && openingBracket != \"[\" { return false }\n                } else {\n                    return false\n                }\n            }\n        }\n        \n        return stack.isEmpty\n    }\n}\n\nextension Character {\n    var isOpeningBracket: Bool { self == \"(\" || self == \"{\" || self == \"[\" }\n    var isClosingBracket: Bool { self == \")\" || self == \"}\" || self == \"]\" }\n}\n\nclass Stack {\n    private var array: [Character] = []\n    \n    var isEmpty: Bool { array.isEmpty }\n    \n    func push(_ element: Character) {\n        array.append(element)\n    }\n    \n    func pop() -> Character? {\n        if isEmpty { return nil }\n        \n        return array.removeLast()\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-parentheses"}