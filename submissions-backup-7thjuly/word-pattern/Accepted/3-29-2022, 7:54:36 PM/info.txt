{"id":669814733,"lang":"swift","time":"3 months, 1 week","timestamp":1648576476,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/669814733/","is_pending":"Not Pending","title":"Word Pattern","memory":"15 MB","code":"class Solution {\n    func wordPattern(_ pattern: String, _ s: String) -> Bool {\n        let patternArray = Array(pattern)\n        let sArray = s.components(separatedBy: \" \")\n        \n        guard patternArray.count == sArray.count else { return false }\n        \n        var patternHashMap: [Character: String] = [:]\n        var sHashMap: [String: Character] = [:]\n        \n        for (index, patternChar) in patternArray.enumerated() {\n            let sString = sArray[index]\n\n            if patternHashMap[patternChar] == nil && sHashMap[sString] == nil {\n                patternHashMap[patternChar] = sString\n                sHashMap[sString] = patternChar\n            } else if (patternHashMap[patternChar] != sString) || (sHashMap[sString] != patternChar) {\n                return false\n            }\n        }\n\n        return true\n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"word-pattern"}